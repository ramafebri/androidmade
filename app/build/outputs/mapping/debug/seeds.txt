leakcanary.internal.HeapAnalyzerService
net.sqlcipher.IContentObserver$Stub$Proxy
androidx.recyclerview.widget.StaggeredGridLayoutManager
leakcanary.internal.AndroidHeapDumper
net.sqlcipher.BuildConfig
androidx.constraintlayout.widget.ConstraintLayout
com.google.gson.internal.bind.TypeAdapters$14
androidx.sqlite.db.SupportSQLiteQuery
com.google.gson.internal.bind.TypeAdapters$20
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
com.google.android.material.theme.MaterialComponentsViewInflater
androidx.recyclerview.widget.LinearLayoutManager
com.google.gson.internal.bind.SqlDateTypeAdapter
androidx.sqlite.db.SupportSQLiteStatement
com.google.gson.DefaultDateTypeAdapter
androidx.appcompat.widget.DialogTitle
com.google.android.material.textfield.TextInputEditText
com.google.gson.internal.bind.DateTypeAdapter$1
com.google.gson.internal.bind.TypeAdapters$29
androidx.room.MultiInstanceInvalidationService
com.google.android.material.button.MaterialButtonToggleGroup
com.google.gson.internal.bind.TypeAdapters$12
com.google.gson.internal.bind.CollectionTypeAdapterFactory
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.appcompat.widget.SearchView
androidx.media.AudioAttributesImplApi21
com.example.gamecatalogue.favorite.FavoriteActivity
leakcanary.internal.LeakCanaryFileProvider
net.sqlcipher.database.SQLiteCursor$QueryThread
net.sqlcipher.AbstractCursor$SelfContentObserver
androidx.core.graphics.drawable.IconCompat
androidx.appcompat.widget.ActionBarOverlayLayout
com.bumptech.glide.load.ImageHeaderParser$ImageType
net.sqlcipher.database.SQLiteDatabase$5
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.activity.ComponentActivity$4
leakcanary.internal.DisplayLeakConnectorView
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter
net.sqlcipher.UnknownTypeException
com.google.android.material.appbar.AppBarLayout$BaseBehavior
net.sqlcipher.IContentObserver$Stub
androidx.activity.ImmLeaksCleaner
net.sqlcipher.database.SQLiteContentHelper
com.google.gson.internal.bind.TimeTypeAdapter
net.sqlcipher.database.SQLiteTransactionListener
androidx.appcompat.widget.ButtonBarLayout
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.google.gson.Gson$5
androidx.appcompat.widget.FitWindowsLinearLayout
net.sqlcipher.StaleDataException
com.google.gson.internal.bind.TypeAdapters$33
net.sqlcipher.database.SQLiteClosable
com.google.gson.internal.bind.TypeAdapters$28
net.sqlcipher.database.SQLiteDirectCursorDriver
androidx.core.app.RemoteActionCompat
net.sqlcipher.BulkCursorToCursorAdaptor
androidx.media.AudioAttributesCompatParcelizer
net.sqlcipher.database.SQLiteDatabase$2
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.appcompat.widget.AlertDialogLayout
com.google.gson.internal.bind.TypeAdapters$30
com.google.android.material.timepicker.TimePickerView
net.sqlcipher.DefaultDatabaseErrorHandler
com.google.android.material.datepicker.MaterialTextInputPicker
com.google.gson.Gson$FutureTypeAdapter
com.google.android.material.internal.NavigationMenuItemView
com.google.gson.internal.bind.TypeAdapters$16
net.sqlcipher.database.SQLiteCompiledSql
androidx.lifecycle.ViewModelStore
com.google.gson.Gson$4
net.sqlcipher.database.SQLiteDebug
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory
androidx.fragment.app.Fragment$5
androidx.appcompat.widget.ActionMenuView
androidx.lifecycle.LifecycleCoroutineScopeImpl
com.example.gamecatalogue.presentation.favorite.FavoriteFragment
com.google.android.material.appbar.MaterialToolbar
net.sqlcipher.database.SQLiteCursorDriver
com.google.android.material.timepicker.ClockHandView
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration
androidx.constraintlayout.widget.Barrier
com.google.android.material.appbar.AppBarLayout$Behavior
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory
androidx.lifecycle.SavedStateHandleController
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter
androidx.core.widget.NestedScrollView
com.google.gson.internal.bind.TypeAdapters$34
androidx.appcompat.widget.ContentFrameLayout
com.google.android.material.datepicker.MaterialDatePicker
androidx.coordinatorlayout.widget.CoordinatorLayout
androidx.appcompat.widget.ViewStubCompat
com.google.android.material.transformation.ExpandableBehavior
androidx.appcompat.widget.ActionBarContainer
net.sqlcipher.BulkCursorNative
com.google.android.material.internal.NavigationMenuView
com.google.android.material.chip.Chip
com.google.gson.internal.bind.TypeAdapters$3
com.google.gson.Gson$2
net.sqlcipher.MatrixCursor
com.google.gson.internal.Excluder
android.support.v4.media.session.MediaSessionCompat$Token
leakcanary.internal.RowElementLayout
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
androidx.media.AudioAttributesImpl
androidx.activity.ComponentActivity$5
leakcanary.internal.AppWatcherInstaller$MainProcess
net.sqlcipher.database.DatabaseObjectNotClosedException
net.sqlcipher.database.SQLiteException
net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler
androidx.core.app.CoreComponentFactory
androidx.appcompat.widget.Toolbar
com.google.gson.internal.bind.TypeAdapters$9
net.sqlcipher.MatrixCursor$RowBuilder
androidx.sqlite.db.SupportSQLiteOpenHelper
androidx.navigation.fragment.NavHostFragment
net.sqlcipher.database.SQLiteProgram
com.google.gson.internal.bind.TypeAdapters$24
leakcanary.internal.RequestStoragePermissionActivity
com.google.android.material.timepicker.ClockFaceView
androidx.cardview.widget.CardView
androidx.media.AudioAttributesImplBaseParcelizer
net.sqlcipher.database.SQLiteDatabaseHook
leakcanary.KeyedWeakReference
com.google.gson.internal.bind.TypeAdapters$10
com.google.gson.TypeAdapter$1
androidx.lifecycle.SavedStateHandleController$1
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder
com.google.android.material.textfield.TextInputLayout
net.sqlcipher.CursorWindow$1
net.sqlcipher.SQLException
com.google.android.material.snackbar.Snackbar$SnackbarLayout
androidx.activity.ComponentActivity$3
net.sqlcipher.CrossProcessCursorWrapper
androidx.lifecycle.Lifecycling$1
net.sqlcipher.BulkCursorProxy
androidx.versionedparcelable.CustomVersionedParcelable
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType
net.sqlcipher.database.SQLiteDatabaseCorruptException
net.sqlcipher.DatabaseUtils$InsertHelper
com.google.gson.internal.bind.TreeTypeAdapter
androidx.savedstate.Recreator
com.google.gson.internal.bind.TypeAdapters$25
com.example.gamecatalogue.MyApplication
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.google.android.material.textview.MaterialTextView
net.sqlcipher.IBulkCursor
net.sqlcipher.database.SQLiteDatabase
net.sqlcipher.database.SQLiteDatabase$4
net.sqlcipher.AbstractCursor
com.google.gson.internal.Excluder$1
androidx.fragment.app.FragmentManager$6
androidx.appcompat.view.menu.ActionMenuItemView
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.google.gson.internal.bind.TypeAdapters$21
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.google.gson.internal.bind.DateTypeAdapter
leakcanary.internal.NotificationReceiver
com.google.gson.internal.bind.TypeAdapters$8
android.support.v4.app.RemoteActionCompatParcelizer
net.sqlcipher.CustomCursorWindowAllocation
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
net.sqlcipher.database.SQLiteDatabase$1
net.sqlcipher.AbstractWindowedCursor
com.example.gamecatalogue.presentation.detail.DetailActivity
com.example.gamecatalogue.core.data.source.local.room.GameDatabase
android.support.v4.media.MediaDescriptionCompat
com.google.android.material.internal.CheckableImageButton
androidx.media.AudioAttributesCompat
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.savedstate.SavedStateRegistry$1
androidx.fragment.app.FragmentContainerView
net.sqlcipher.CursorWindow
net.sqlcipher.R$string
net.sqlcipher.R
androidx.lifecycle.LifecycleController$observer$1
net.sqlcipher.database.SQLiteQueryStats
com.google.gson.internal.bind.ObjectTypeAdapter$1
androidx.viewpager2.adapter.FragmentStateAdapter$2
net.sqlcipher.database.SQLiteAbortException
com.google.gson.internal.bind.SqlDateTypeAdapter$1
com.google.android.material.internal.BaselineLayout
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.google.gson.internal.bind.ObjectTypeAdapter
com.google.gson.internal.bind.ArrayTypeAdapter
com.google.gson.internal.bind.TypeAdapters$2
com.google.gson.internal.bind.TimeTypeAdapter$1
com.google.gson.internal.bind.ArrayTypeAdapter$1
net.sqlcipher.database.SQLiteQuery
androidx.versionedparcelable.ParcelImpl
net.sqlcipher.CursorIndexOutOfBoundsException
com.google.gson.internal.bind.TypeAdapters$23
net.sqlcipher.CursorWindowAllocation
com.google.android.material.bottomsheet.BottomSheetBehavior
com.google.gson.internal.bind.TypeAdapters$1
net.sqlcipher.database.SQLiteDatabase$CursorFactory
com.google.android.material.transformation.FabTransformationSheetBehavior
com.google.gson.internal.bind.TypeAdapters$13
androidx.media.AudioAttributesImplApi21Parcelizer
com.bumptech.glide.manager.SupportRequestManagerFragment
net.sqlcipher.database.SQLiteDatabase$3
net.sqlcipher.InvalidRowColumnException
com.google.android.material.snackbar.SnackbarContentLayout
androidx.appcompat.view.menu.ListMenuItemView
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
net.sqlcipher.database.SupportHelper
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
net.sqlcipher.database.SQLiteQueryBuilder
androidx.recyclerview.widget.RecyclerView
com.google.gson.Gson$1
net.sqlcipher.DatabaseErrorHandler
androidx.media.AudioAttributesImplBase
net.sqlcipher.database.SQLiteDiskIOException
com.google.gson.internal.bind.TypeAdapters$6
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
androidx.core.app.RemoteActionCompatParcelizer
com.google.android.material.transformation.FabTransformationScrimBehavior
com.google.android.material.transformation.ExpandableTransformationBehavior
com.google.android.material.bottomnavigation.BottomNavigationView
net.sqlcipher.database.SQLiteDoneException
com.google.gson.internal.bind.TypeAdapters$18
com.google.android.material.datepicker.MaterialCalendarGridView
com.google.android.material.button.MaterialButton
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.google.gson.internal.bind.TypeAdapters$5
leakcanary.internal.AppWatcherInstaller
androidx.appcompat.app.AlertController$RecycleListView
com.google.gson.internal.bind.TypeAdapters$15
com.google.gson.internal.bind.TypeAdapters$27
android.support.v4.media.MediaMetadataCompat
com.google.android.material.datepicker.MaterialCalendar
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.google.gson.internal.bind.TypeAdapters$26$1
com.google.gson.internal.bind.TypeAdapters$32
androidx.annotation.Keep
kotlin.Metadata
com.google.gson.internal.bind.MapTypeAdapterFactory
com.example.gamecatalogue.core.data.source.remote.network.ApiService
com.example.gamecatalogue.presentation.profile.ProfileFragment
com.google.gson.internal.bind.TypeAdapters$11
com.google.gson.internal.bind.TypeAdapters$31
android.support.v4.media.RatingCompat
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.google.gson.internal.bind.TypeAdapters$4
net.sqlcipher.database.SQLiteFullException
com.google.gson.internal.bind.TypeAdapters$26
android.support.v4.media.session.MediaSessionCompat$QueueItem
net.sqlcipher.CursorWrapper
com.google.android.material.timepicker.ChipTextInputComboView
net.sqlcipher.DatabaseUtils
androidx.lifecycle.SingleGeneratedAdapterObserver
com.bumptech.glide.GeneratedAppGlideModule
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter
com.google.android.material.chip.ChipGroup
androidx.fragment.app.DialogFragment
com.google.gson.internal.bind.TypeAdapters$35
com.google.android.material.bottomappbar.BottomAppBar$Behavior
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.example.gamecatalogue.MainActivity
net.sqlcipher.database.SQLiteConstraintException
com.google.gson.internal.bind.TypeAdapters$17
com.example.gamecatalogue.core.data.source.local.room.GameDatabase_Impl
com.google.gson.Gson$3
net.sqlcipher.database.SQLiteDatabase$LibraryLoader
com.google.android.material.floatingactionbutton.FloatingActionButton
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.activity.result.ActivityResultRegistry$1
com.google.gson.internal.bind.TypeAdapters$7
com.google.android.material.behavior.SwipeDismissBehavior
net.sqlcipher.database.SQLiteStatement
net.sqlcipher.Cursor
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter
android.support.v4.media.session.ParcelableVolumeInfo
net.sqlcipher.database.SQLiteOpenHelper
leakcanary.internal.activity.LeakActivity
leakcanary.internal.AndroidSupportFragmentDestroyWatcher
androidx.navigation.NavController$1
androidx.constraintlayout.widget.Guideline
leakcanary.internal.InternalLeakCanary
androidx.recyclerview.widget.GridLayoutManager
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.google.android.material.transformation.FabTransformationBehavior
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
androidx.appcompat.widget.ActionBarContextView
androidx.lifecycle.CompositeGeneratedAdaptersObserver
android.support.v4.media.session.PlaybackStateCompat$CustomAction
shark.AndroidResourceIdNames
com.google.gson.internal.bind.TypeAdapters$35$1
net.sqlcipher.database.SQLiteDebug$PagerStats
net.sqlcipher.database.SupportFactory
androidx.sqlite.db.SupportSQLiteDatabase
net.sqlcipher.RowAllocationException
androidx.navigation.fragment.DialogFragmentNavigator$1
com.example.gamecatalogue.presentation.home.HomeFragment
net.sqlcipher.database.SQLiteDebug$DbStats
com.google.gson.internal.bind.TypeAdapters$19
net.sqlcipher.database.SQLiteCursor
net.sqlcipher.database.SQLiteMisuseException
androidx.appcompat.view.menu.ExpandedMenuView
android.support.v4.media.MediaBrowserCompat$MediaItem
net.sqlcipher.DefaultCursorWindowAllocation
com.google.gson.internal.bind.TypeAdapters$22
leakcanary.internal.AndroidXFragmentDestroyWatcher
net.sqlcipher.IContentObserver
net.sqlcipher.database.SqliteWrapper
net.sqlcipher.database.SupportHelper$1
leakcanary.internal.PlumberInstaller
android.support.v4.media.session.PlaybackStateCompat
net.sqlcipher.database.SQLiteDebug$DbStats: int lookaside
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDebug$PagerStats: long totalBytes
leakcanary.internal.InternalLeakCanary: kotlin.Lazy testClassName$delegate
net.sqlcipher.database.SQLiteDatabase: long mLockAcquiredThreadTime
net.sqlcipher.database.SupportFactory: boolean clearPassphrase
leakcanary.KeyedWeakReference: long retainedUptimeMillis
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Boolean tba
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember1
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
net.sqlcipher.database.SQLiteDatabase: boolean mLockingEnabled
kotlinx.coroutines.channels.ArrayChannel: int size
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer reviewsTextCount
net.sqlcipher.AbstractCursor: boolean mClosed
net.sqlcipher.IContentObserver$Stub$Proxy: android.os.IBinder mRemote
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.DatabaseErrorHandler mErrorHandler
net.sqlcipher.database.SQLiteQueryBuilder: net.sqlcipher.database.SQLiteDatabase$CursorFactory mFactory
net.sqlcipher.IBulkCursor: int CLOSE_TRANSACTION
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: com.example.gamecatalogue.core.data.source.remote.response.Reactions reactions
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDebug$DbStats: long pageSize
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase$CursorFactory mFactory
net.sqlcipher.DatabaseUtils: java.text.Collator mColl
net.sqlcipher.database.SQLiteQuery: java.lang.String TAG
shark.AndroidResourceIdNames: int RESOURCE_ID_TYPE_ITERATOR
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: com.example.gamecatalogue.core.data.source.remote.response.EsrbRating esrbRating
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List stores
net.sqlcipher.CustomCursorWindowAllocation: long initialAllocationSize
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
leakcanary.internal.navigation.BackstackFrame: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_IGNORE
net.sqlcipher.database.SQLiteDatabase$5: net.sqlcipher.database.SQLiteDatabase this$0
leakcanary.internal.AndroidXFragmentDestroyWatcher: kotlin.jvm.functions.Function0 configProvider
net.sqlcipher.AbstractCursor: android.content.ContentResolver mContentResolver
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Object userGame
net.sqlcipher.database.SQLiteCompiledSql: long nHandle
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.String slug
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.Cursor mCursor
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List tags
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String name
androidx.lifecycle.ViewModelStore: java.util.HashMap mMap
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Integer ratingsCount
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase$CursorFactory mFactory
net.sqlcipher.database.SQLiteOpenHelper: java.lang.String mName
net.sqlcipher.AbstractCursor: java.util.HashMap mUpdatedRows
net.sqlcipher.database.SQLiteDatabase: boolean mInnerTransactionIsSuccessful
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List metacriticPlatforms
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer ratingTop
com.example.gamecatalogue.core.data.source.remote.response.AddedByStatus: java.lang.Integer yet
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_ABORT
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer added
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember16
net.sqlcipher.DatabaseUtils$InsertHelper: java.util.HashMap mColumns
net.sqlcipher.database.SQLiteProgram: long nStatement
net.sqlcipher.database.SQLiteDebug$PagerStats: long referencedBytes
kotlinx.coroutines.InvokeOnCancelling: int _invoked
net.sqlcipher.BuildConfig: java.lang.String APPLICATION_ID
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.util.List stores
net.sqlcipher.BulkCursorToCursorAdaptor: int mCount
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: com.example.gamecatalogue.core.data.source.remote.response.AddedByStatus addedByStatus
net.sqlcipher.AbstractCursor: android.os.Bundle mExtras
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: double rating
kotlin.SafePublicationLazyImpl: java.lang.Object _value
net.sqlcipher.database.SQLiteDatabase: long mLastLockMessageTime
net.sqlcipher.database.SQLiteDatabase: long mNativeHandle
net.sqlcipher.database.SQLiteDatabase: int OPEN_READWRITE
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
net.sqlcipher.database.SQLiteQuery: java.lang.String[] mBindArgs
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.util.List ratings
net.sqlcipher.database.SupportHelper: boolean clearPassphrase
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.Cursor: int FIELD_TYPE_BLOB
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Integer ratingTop
shark.AndroidResourceIdNames: int[] resourceIds
net.sqlcipher.database.SQLiteCompiledSql: boolean mInUse
net.sqlcipher.BuildConfig: int VERSION_CODE
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Integer reviewsCount
net.sqlcipher.database.SQLiteDebug$PagerStats: long databaseBytes
net.sqlcipher.database.SQLiteDatabase: int mMaxSqlCacheSize
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember10
net.sqlcipher.IBulkCursor: int DELETE_ROW_TRANSACTION
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
net.sqlcipher.AbstractCursor: android.database.DataSetObservable mDataSetObservable
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.String name
net.sqlcipher.database.DatabaseObjectNotClosedException: java.lang.String s
net.sqlcipher.database.SQLiteQueryStats: long largestIndividualRowSize
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String redditName
net.sqlcipher.database.SQLiteProgram: boolean mClosed
net.sqlcipher.MatrixCursor: int columnCount
net.sqlcipher.database.SQLiteDatabase: java.lang.Throwable mStackTrace
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.Boolean nofollow
net.sqlcipher.database.SQLiteOpenHelper: java.lang.String TAG
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer achievementsCount
net.sqlcipher.database.SQLiteCursor: java.util.Map mColumnNameMap
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Integer playtime
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember21
leakcanary.internal.AndroidHeapDumper: leakcanary.internal.LeakDirectoryProvider leakDirectoryProvider
net.sqlcipher.database.SQLiteProgram: java.lang.String mSql
net.sqlcipher.R$string: int library_android_database_sqlcipher_licenseLink
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase mDatabase
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
net.sqlcipher.DatabaseUtils$InsertHelper: java.lang.String mTableName
leakcanary.internal.AndroidXFragmentDestroyWatcher: leakcanary.ObjectWatcher objectWatcher
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.String saturatedColor
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteStatement mPreparedStatement
net.sqlcipher.database.SQLiteDatabase: int QUERY_LOG_SQL_LENGTH
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember8
net.sqlcipher.database.SQLiteProgram: net.sqlcipher.database.SQLiteCompiledSql mCompiledSql
net.sqlcipher.database.SQLiteQuery: int mOffsetIndex
net.sqlcipher.database.SQLiteDebug$PagerStats: int memoryUsed
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.util.List platforms
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.String released
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo: java.lang.String deletedTable
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.StringBuilder mWhereClause
net.sqlcipher.database.SQLiteOpenHelper: android.content.Context mContext
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteTransactionListener mTransactionListener
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
net.sqlcipher.database.SQLiteOpenHelper: boolean mIsInitializing
net.sqlcipher.database.SQLiteQueryBuilder: boolean mDistinct
net.sqlcipher.IContentObserver$Stub: java.lang.String DESCRIPTOR
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: com.example.gamecatalogue.core.data.source.remote.response.AddedByStatus addedByStatus
net.sqlcipher.database.SQLiteCursor$QueryThread: net.sqlcipher.database.SQLiteCursor this$0
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
net.sqlcipher.database.SQLiteDatabase: int EVENT_DB_OPERATION
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List publishers
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Object clip
net.sqlcipher.AbstractCursor: java.lang.Object mSelfObserverLock
net.sqlcipher.database.SQLiteDatabase$2: net.sqlcipher.database.SQLiteDatabase this$0
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
net.sqlcipher.Cursor: int FIELD_TYPE_STRING
leakcanary.internal.InternalLeakCanary: kotlin.Lazy isInstantApp$delegate
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.util.List shortScreenshots
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember12
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember3
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.database.SQLiteQuery mQuery
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember11
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: com.example.gamecatalogue.core.data.source.remote.response.EsrbRating esrbRating
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List ratings
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteStatement mInsertStatement
net.sqlcipher.BuildConfig: java.lang.String VERSION_NAME
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.util.List results
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: com.example.gamecatalogue.core.data.source.remote.response.Filters filters
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String mTables
net.sqlcipher.database.SQLiteProgram: long nHandle
net.sqlcipher.database.SQLiteDatabase: int LOCK_ACQUIRED_WARNING_TIME_IN_MS_ALWAYS_PRINT
net.sqlcipher.BulkCursorToCursorAdaptor: net.sqlcipher.AbstractCursor$SelfContentObserver mObserverBridge
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer playtime
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: leakcanary.ObjectWatcher objectWatcher
net.sqlcipher.MatrixCursor$RowBuilder: int endIndex
net.sqlcipher.DefaultCursorWindowAllocation: long WindowAllocationUnbounded
net.sqlcipher.IBulkCursor: int GET_COLUMN_NAMES_TRANSACTION
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.DatabaseErrorHandler mErrorHandler
kotlinx.coroutines.CompletedExceptionally: int _handled
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: int ratingsCount
net.sqlcipher.database.SQLiteDatabase: java.lang.String COMMIT_SQL
leakcanary.internal.InternalLeakCanary: kotlin.Lazy onRetainInstanceListener$delegate
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_FAIL
net.sqlcipher.database.SQLiteDatabase: int mCacheFullWarnings
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.AddedByStatus: java.lang.Integer owned
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Integer added
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.String seoDescription
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.String seoKeywords
com.example.gamecatalogue.core.data.source.remote.response.AddedByStatus: java.lang.Integer playing
net.sqlcipher.BulkCursorToCursorAdaptor: boolean mWantsAllOnMoveCalls
net.sqlcipher.DatabaseUtils: java.lang.String TAG
net.sqlcipher.MatrixCursor$RowBuilder: int index
leakcanary.KeyedWeakReference: java.lang.String key
net.sqlcipher.database.SQLiteDatabase$4: net.sqlcipher.database.SQLiteDatabase this$0
net.sqlcipher.Cursor: int FIELD_TYPE_INTEGER
net.sqlcipher.R$string: int library_android_database_sqlcipher_libraryVersion
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.String seoTitle
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember4
net.sqlcipher.database.SQLiteDebug: int sNumActiveCursorsFinalized
kotlinx.coroutines.DefaultExecutor: int debugStatus
net.sqlcipher.AbstractCursor: int mRowIdColumnIndex
com.example.gamecatalogue.core.domain.model.Game: android.os.Parcelable$Creator CREATOR
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: kotlin.jvm.functions.Function0 configProvider
net.sqlcipher.IBulkCursor: int COUNT_TRANSACTION
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
net.sqlcipher.DatabaseUtils: char[] HEX_DIGITS_LOWER
net.sqlcipher.database.SQLiteDatabase: int mNumCacheHits
net.sqlcipher.database.SQLiteCompiledSql: java.lang.String mSqlStmt
net.sqlcipher.database.SQLiteDatabase: int mNumCacheMisses
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List platforms
net.sqlcipher.database.SupportFactory: byte[] passphrase
leakcanary.internal.InternalLeakCanary: java.lang.String LEAK_CANARY_THREAD_NAME
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.AddedByStatus: java.lang.Integer toplay
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember18
leakcanary.KeyedWeakReference: long watchUptimeMillis
net.sqlcipher.database.SqliteWrapper: java.lang.String SQLITE_EXCEPTION_DETAIL_MESSAGE
leakcanary.internal.InternalLeakCanary: leakcanary.internal.InternalLeakCanary INSTANCE
com.example.gamecatalogue.core.data.source.remote.response.AddedByStatus: java.lang.Integer beaten
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteQuery mQuery
com.example.gamecatalogue.core.data.source.remote.response.EsrbRating: java.lang.String slug
net.sqlcipher.CursorWindow: int mStartPos
net.sqlcipher.database.SQLiteCursor: boolean mPendingData
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
net.sqlcipher.database.SQLiteDatabase: int mTempTableSequence
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
net.sqlcipher.database.SQLiteDatabase: java.util.Map mCompiledQueries
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
net.sqlcipher.database.SQLiteQueryStats: long totalQueryResultSize
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_NONE
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer parentAchievementsCount
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String slug
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo: java.lang.String foreignKey
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.String next
net.sqlcipher.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL
androidx.appcompat.widget.ActionMenuPresenter$SavedState: android.os.Parcelable$Creator CREATOR
leakcanary.internal.InternalLeakCanary: leakcanary.internal.HeapDumpTrigger heapDumpTrigger
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.Integer count
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_ROLLBACK
net.sqlcipher.BuildConfig: java.lang.String FLAVOR
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember5
net.sqlcipher.DefaultDatabaseErrorHandler: java.lang.String TAG
net.sqlcipher.IBulkCursor: int UPDATE_ROWS_TRANSACTION
leakcanary.KeyedWeakReference: java.lang.String description
com.example.gamecatalogue.core.data.source.remote.response.EsrbRating: java.lang.String name
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember6
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.String updated
net.sqlcipher.database.SQLiteQueryBuilder: java.util.regex.Pattern sLimitPattern
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Integer suggestionsCount
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_ACTIVE_CURSOR_FINALIZATION
net.sqlcipher.AbstractCursor: java.lang.String TAG
net.sqlcipher.database.SQLiteDatabase: int sQueryLogTimeInMillis
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List parentPlatforms
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember2
net.sqlcipher.database.SQLiteDatabase: int EVENT_DB_CORRUPT
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_LOCK_TIME_TRACKING_STACK_TRACE
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.String description
net.sqlcipher.database.SQLiteCursor: int mCursorWindowCapacity
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.database.SQLiteDatabase mDatabase
net.sqlcipher.database.SQLiteCursor: java.lang.String mEditTable
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDatabase: java.lang.String mPathForLogs
net.sqlcipher.CursorWindow: android.os.Parcelable$Creator CREATOR
androidx.navigation.NavBackStackEntryState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_SQL_TIME
net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler: java.lang.ref.WeakReference wrappedCursor
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType Immediate
net.sqlcipher.database.SQLiteDatabase: int MAX_WARNINGS_ON_CACHESIZE_CONDITION
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.example.gamecatalogue.core.data.source.remote.response.AddedByStatus: java.lang.Integer dropped
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteCursor: java.lang.String TAG
net.sqlcipher.BuildConfig: java.lang.String BUILD_TYPE
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteDatabase mDatabase
leakcanary.internal.InternalLeakCanary: android.app.Activity resumedActivity
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember15
net.sqlcipher.database.SQLiteDatabase$3: net.sqlcipher.database.SQLiteDatabase this$0
net.sqlcipher.database.SQLiteCursor: int mMaxRead
net.sqlcipher.database.SupportHelper: byte[] passphrase
net.sqlcipher.database.SQLiteDatabase: java.lang.String mTimeClosed
net.sqlcipher.R$string: int library_android_database_sqlcipher_author
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
net.sqlcipher.database.SQLiteDatabase: int mFlags
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer screenshotsCount
com.example.gamecatalogue.core.data.source.remote.response.EsrbRating: java.lang.Integer id
net.sqlcipher.IBulkCursor: int REQUERY_TRANSACTION
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteCompiledSql: long nStatement
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo: java.lang.String masterTable
net.sqlcipher.database.SQLiteDatabase: java.util.Map mSyncUpdateInfo
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String dominantColor
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer twitchCount
net.sqlcipher.database.SQLiteDatabase: java.util.concurrent.locks.ReentrantLock mLock
net.sqlcipher.database.SQLiteCompiledSql: java.lang.String TAG
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer additionsCount
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer youtubeCount
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.util.List tags
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
net.sqlcipher.AbstractCursor: int mPos
net.sqlcipher.R$string: int library_android_database_sqlcipher_authorWebsite
net.sqlcipher.R$string: int library_android_database_sqlcipher_isOpenSource
net.sqlcipher.AbstractCursor: boolean mSelfObserverRegistered
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
net.sqlcipher.database.SQLiteDirectCursorDriver: java.lang.String mSql
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteStatement mReplaceStatement
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.util.List parentPlatforms
net.sqlcipher.database.SupportHelper: net.sqlcipher.database.SQLiteOpenHelper standardHelper
net.sqlcipher.database.SQLiteCursor: int mInitialRead
com.google.android.material.internal.ParcelableSparseArray: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
net.sqlcipher.database.SQLiteDatabase$3: char[] val$keyMaterial
leakcanary.internal.InternalLeakCanary: android.app.Application _application
net.sqlcipher.database.SQLiteDatabase: int OPEN_READONLY
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String descriptionRaw
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember7
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer reviewsCount
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.String backgroundImage
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.util.List genres
net.sqlcipher.database.SQLiteOpenHelper: boolean mEnableWriteAheadLogging
net.sqlcipher.database.SQLiteProgram: net.sqlcipher.database.SQLiteDatabase mDatabase
net.sqlcipher.database.SQLiteQueryBuilder: boolean mStrictProjectionMap
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String redditLogo
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List genres
net.sqlcipher.MatrixCursor: java.lang.Object[] data
net.sqlcipher.database.SQLiteDebug$PagerStats: int pageCacheOverflo
leakcanary.internal.InternalLeakCanary: kotlin.Lazy isDebuggableBuild$delegate
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_LOCK_TIME_TRACKING
net.sqlcipher.database.SQLiteDatabase: java.lang.String LOG_SLOW_QUERIES_PROPERTY
kotlinx.coroutines.JobSupport: java.lang.Object _state
net.sqlcipher.BulkCursorToCursorAdaptor: net.sqlcipher.IBulkCursor mBulkCursor
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String nameOriginal
net.sqlcipher.BuildConfig: boolean DEBUG
net.sqlcipher.IContentObserver$Stub: int TRANSACTION_onChange
net.sqlcipher.BulkCursorToCursorAdaptor: java.lang.String[] mColumns
net.sqlcipher.database.SQLiteDatabase$4: android.database.sqlite.SQLiteTransactionListener val$transactionListener
com.google.android.material.badge.BadgeDrawable$SavedState: android.os.Parcelable$Creator CREATOR
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String metacriticUrl
net.sqlcipher.database.SQLiteCursor: int mCursorState
net.sqlcipher.Cursor: int FIELD_TYPE_FLOAT
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
net.sqlcipher.IBulkCursor: int DEACTIVATE_TRANSACTION
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String backgroundImageAdditional
net.sqlcipher.CustomCursorWindowAllocation: long growthPaddingSize
net.sqlcipher.database.SQLiteDebug$PagerStats: int largestMemAlloc
net.sqlcipher.MatrixCursor: java.lang.String[] columnNames
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1 fragmentLifecycleCallbacks
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteClosable: int mReferenceCount
leakcanary.internal.AndroidXFragmentDestroyWatcher: leakcanary.internal.AndroidXFragmentDestroyWatcher$fragmentLifecycleCallbacks$1 fragmentLifecycleCallbacks
net.sqlcipher.CursorWrapper: net.sqlcipher.Cursor mCursor
net.sqlcipher.IBulkCursor: int ON_MOVE_TRANSACTION
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String released
net.sqlcipher.MatrixCursor: int rowCount
net.sqlcipher.database.SQLiteDirectCursorDriver: java.lang.String mEditTable
net.sqlcipher.database.SQLiteDatabase: java.util.WeakHashMap mPrograms
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_SQL_STATEMENTS
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Integer metacritic
leakcanary.internal.AndroidHeapDumper: android.os.Handler mainHandler
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer moviesCount
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.IBulkCursor: int WANTS_ON_MOVE_TRANSACTION
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.R$string: int library_android_database_sqlcipher_libraryDescription
net.sqlcipher.database.SQLiteQueryBuilder: java.util.Map mProjectionMap
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer gameSeriesCount
net.sqlcipher.database.SQLiteDatabase: int LOCK_WARNING_WINDOW_IN_MS
net.sqlcipher.IBulkCursor: int GET_CURSOR_WINDOW_TRANSACTION
net.sqlcipher.database.SQLiteDebug$DbStats: long dbSize
net.sqlcipher.database.SQLiteDebug$DbStats: java.lang.String dbName
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDatabase: int CREATE_IF_NECESSARY
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
leakcanary.KeyedWeakReference: long heapDumpUptimeMillis
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
net.sqlcipher.AbstractWindowedCursor: net.sqlcipher.CursorWindow mWindow
net.sqlcipher.database.SQLiteCursor: java.lang.String[] mColumns
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler mNotificationHandler
net.sqlcipher.database.SupportHelper$1: net.sqlcipher.database.SupportHelper this$0
net.sqlcipher.database.SQLiteDebug$PagerStats: int numPagers
net.sqlcipher.CustomCursorWindowAllocation: long maxAllocationSize
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType Exclusive
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
net.sqlcipher.DatabaseUtils: java.lang.String[] countProjection
net.sqlcipher.DefaultCursorWindowAllocation: long initialAllocationSize
net.sqlcipher.database.SQLiteQuery: java.lang.Object[] mObjectBindArgs
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabaseHook mHook
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
net.sqlcipher.Cursor: int FIELD_TYPE_NULL
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.String seoH1
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
leakcanary.internal.InternalLeakCanary: java.lang.String DYNAMIC_SHORTCUT_ID
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteCursorDriver mDriver
net.sqlcipher.CursorWindow: long nWindow
kotlinx.coroutines.CancellableContinuationImpl: int _decision
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType[] $VALUES
net.sqlcipher.IBulkCursor: int RESPOND_TRANSACTION
net.sqlcipher.CursorWindow: net.sqlcipher.CursorWindowAllocation allocation
net.sqlcipher.database.SQLiteCursor: int NO_COUNT
leakcanary.internal.InternalLeakCanary: kotlin.Lazy formFactor$delegate
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String TAG
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
shark.AndroidResourceIdNames: java.lang.String[] names
net.sqlcipher.R$string: int library_android_database_sqlcipher_libraryName
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String updated
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.util.List nofollowCollections
net.sqlcipher.DatabaseUtils$InsertHelper: int TABLE_INFO_PRAGMA_COLUMNNAME_INDEX
net.sqlcipher.database.SQLiteDatabase$5: android.database.sqlite.SQLiteTransactionListener val$transactionListener
net.sqlcipher.database.SQLiteOpenHelper: int mNewVersion
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: double rating
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
net.sqlcipher.DatabaseUtils$InsertHelper: int TABLE_INFO_PRAGMA_DEFAULT_INDEX
leakcanary.KeyedWeakReference: leakcanary.KeyedWeakReference$Companion Companion
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Object clip
net.sqlcipher.database.SQLiteDatabase: java.lang.String MEMORY
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember9
net.sqlcipher.database.SQLiteDatabase: java.lang.String TAG
net.sqlcipher.database.SQLiteDatabase: int SQLITE_MAX_LIKE_PATTERN_LENGTH
net.sqlcipher.DatabaseUtils: boolean DEBUG
net.sqlcipher.MatrixCursor$RowBuilder: net.sqlcipher.MatrixCursor this$0
net.sqlcipher.database.SQLiteDatabase: int mSlowQueryThreshold
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String redditDescription
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember14
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Object userGame
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Boolean tba
com.example.gamecatalogue.core.data.source.remote.response.Reactions: java.lang.Integer jsonMember20
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
shark.AndroidResourceIdNames: shark.AndroidResourceIdNames holderField
net.sqlcipher.database.SQLiteDatabase: boolean mTransactionIsSuccessful
net.sqlcipher.database.SQLiteOpenHelper: boolean mDeferSetWriteAheadLoggingEnabled
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
net.sqlcipher.database.SQLiteCursor: int mCount
net.sqlcipher.database.SQLiteDatabase: java.lang.String GET_LOCK_LOG_PREFIX
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDatabase: java.lang.String SQLCIPHER_ANDROID_VERSION
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer creatorsCount
net.sqlcipher.database.SQLiteDatabase: java.lang.String[] CONFLICT_VALUES
net.sqlcipher.database.SQLiteCompiledSql: net.sqlcipher.database.SQLiteDatabase mDatabase
net.sqlcipher.database.SqliteWrapper: java.lang.String TAG
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
net.sqlcipher.AbstractCursor: android.database.ContentObservable mContentObservable
net.sqlcipher.database.SupportHelper$1: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration val$configuration
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
net.sqlcipher.database.SQLiteCursor: java.util.concurrent.locks.ReentrantLock mLock
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.Integer reviewsTextCount
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.Object previous
net.sqlcipher.R$string: int library_android_database_sqlcipher_libraryWebsite
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String redditUrl
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: java.lang.String dominantColor
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
kotlinx.coroutines.DispatchedCoroutine: int _decision
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
kotlinx.coroutines.CancelledContinuation: int _resumed
net.sqlcipher.AbstractCursor$SelfContentObserver: java.lang.ref.WeakReference mCursor
net.sqlcipher.database.SQLiteDatabase: long mLockAcquiredWallTime
net.sqlcipher.BulkCursorToCursorAdaptor: java.lang.String TAG
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDatabase: java.lang.String KEY_ENCODING
net.sqlcipher.database.SQLiteCursor: java.lang.Throwable mStackTrace
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer parentsCount
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
net.sqlcipher.database.SQLiteDatabase: int SLEEP_AFTER_YIELD_QUANTUM
net.sqlcipher.BulkCursorProxy: android.os.Bundle mExtras
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.DatabaseUtils: boolean LOCAL_LOGV
leakcanary.internal.InternalLeakCanary: kotlin.Lazy isRunningTests$delegate
leakcanary.internal.InternalLeakCanary: java.lang.String version
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDatabase: java.lang.String mLastSqlStatement
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String saturatedColor
net.sqlcipher.database.SupportFactory: net.sqlcipher.database.SQLiteDatabaseHook hook
net.sqlcipher.database.SQLiteClosable: java.lang.Object mLock
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
net.sqlcipher.database.SQLiteCursor$QueryThread: int mThreadState
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer metacritic
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer suggestionsCount
shark.AndroidResourceIdNames: shark.AndroidResourceIdNames$Companion Companion
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.Integer redditCount
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.example.gamecatalogue.core.data.source.remote.response.GameResponse: int id
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType Deferred
net.sqlcipher.database.SQLiteDatabase: java.lang.String mPath
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDatabase: int OPEN_READ_MASK
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List developers
shark.AndroidResourceIdNames: int FIRST_APP_RESOURCE_ID
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteDatabase mDb
net.sqlcipher.IBulkCursor: java.lang.String descriptor
net.sqlcipher.BulkCursorProxy: android.os.IBinder mRemote
net.sqlcipher.database.SQLiteDatabase: java.util.WeakHashMap sActiveDatabases
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
net.sqlcipher.AbstractCursor: android.database.ContentObserver mSelfObserver
net.sqlcipher.IBulkCursor: int GET_EXTRAS_TRANSACTION
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_SQL_CACHE
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDebug$PagerStats: java.util.ArrayList dbStats
leakcanary.internal.AndroidHeapDumper: android.content.Context context
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: int id
net.sqlcipher.AbstractCursor: java.lang.Long mCurrentRowID
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String description
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String backgroundImage
com.example.gamecatalogue.core.data.source.remote.response.ListGameResponse: java.lang.Boolean noindex
net.sqlcipher.database.SQLiteDatabase: int NO_LOCALIZED_COLLATORS
net.sqlcipher.database.SQLiteDatabase: int MAX_SQL_CACHE_SIZE
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_REPLACE
net.sqlcipher.AbstractCursor: android.net.Uri mNotifyUri
net.sqlcipher.database.SQLiteDatabase: java.util.regex.Pattern EMAIL_IN_DB_PATTERN
net.sqlcipher.database.SQLiteDatabase$3: byte[] val$password
net.sqlcipher.database.SQLiteDatabase: java.lang.String mTimeOpened
com.example.gamecatalogue.core.data.source.remote.response.Filters: java.util.List years
net.sqlcipher.database.SQLiteProgram: java.lang.String TAG
net.sqlcipher.database.SQLiteDatabase$2: byte[] val$password
net.sqlcipher.database.SQLiteDatabase: int LOCK_ACQUIRED_WARNING_THREAD_TIME_IN_MS
net.sqlcipher.database.SQLiteDatabase: int LOCK_ACQUIRED_WARNING_TIME_IN_MS
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.lang.String website
leakcanary.internal.InternalLeakCanary: boolean applicationVisible
net.sqlcipher.R$string: int library_android_database_sqlcipher_repositoryLink
net.sqlcipher.CursorWindow: int mRequiredPos
net.sqlcipher.database.SQLiteCursor: boolean fillWindowForwardOnly
com.example.gamecatalogue.core.data.source.remote.response.GameDetailResponse: java.util.List alternativeNames
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
net.sqlcipher.DatabaseUtils: void dumpCurrentRow(net.sqlcipher.Cursor,java.lang.StringBuilder)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
net.sqlcipher.AbstractCursor: boolean isLast()
net.sqlcipher.database.SQLiteDatabase: void access$100(net.sqlcipher.database.SQLiteDatabase,char[])
androidx.lifecycle.ViewModel: ViewModel()
androidx.constraintlayout.widget.Barrier: int getMargin()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.bumptech.glide.module.AppGlideModule: AppGlideModule()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
net.sqlcipher.database.SQLiteDatabase: void key(byte[])
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
net.sqlcipher.DatabaseUtils$InsertHelper: DatabaseUtils$InsertHelper(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getLabelVisibilityMode()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor rewind()
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
shark.AndroidResourceIdNames: shark.AndroidResourceIdNames access$getHolderField$cp()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
net.sqlcipher.database.SQLiteStatement: int executeUpdateDelete()
net.sqlcipher.CursorWindow: void clear()
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
net.sqlcipher.IContentObserver$Stub: android.os.IBinder asBinder()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.BaselineLayout: int getBaseline()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.google.android.material.chip.Chip: void setMaxLines(int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
net.sqlcipher.AbstractCursor: android.net.Uri getNotificationUri()
net.sqlcipher.CursorWindow: boolean isLong(int,int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
net.sqlcipher.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: java.util.ArrayList getDbStats()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
leakcanary.internal.NotificationType: leakcanary.internal.NotificationType[] values()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$PropertyRelatedElement: kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$PropertyRelatedElement valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
leakcanary.internal.InternalLeakCanary: java.lang.Object invoke(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.google.android.material.bottomnavigation.BottomNavigationView: void setLabelVisibilityMode(int)
net.sqlcipher.database.SQLiteCursor: void queryThreadLock()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemTextAppearanceInactive(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.google.android.material.chip.Chip: float getCloseIconSize()
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
shark.ObjectInspectors: shark.ObjectInspectors valueOf(java.lang.String)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getItemIconSize()
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.bumptech.glide.manager.SupportRequestManagerFragment: SupportRequestManagerFragment()
net.sqlcipher.database.SQLiteDatabaseCorruptException: SQLiteDatabaseCorruptException()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
leakcanary.internal.activity.LeakActivity: LeakActivity()
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.google.android.material.bottomnavigation.BottomNavigationView: android.content.res.ColorStateList getItemIconTintList()
net.sqlcipher.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()
kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility: kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo: SQLiteDatabase$SyncUpdateInfo(java.lang.String,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: Fragment(int)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
net.sqlcipher.database.SQLiteQuery: void bindDouble(int,double)
leakcanary.internal.InternalLeakCanary: void setEnabledBlocking(java.lang.String,boolean)
androidx.cardview.widget.CardView: void setRadius(float)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
net.sqlcipher.AbstractCursor: void setExtras(android.os.Bundle)
net.sqlcipher.database.SQLiteOpenHelper: <clinit>()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.google.android.material.chip.Chip: float getChipIconSize()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
net.sqlcipher.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
net.sqlcipher.database.SupportHelper: java.lang.String getDatabaseName()
net.sqlcipher.DefaultCursorWindowAllocation: long getInitialAllocationSize()
androidx.constraintlayout.widget.Barrier: void setType(int)
com.google.gson.Gson$3: Gson$3()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
net.sqlcipher.database.SQLiteException: SQLiteException(java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTextColor(android.content.res.ColorStateList)
leakcanary.internal.InternalLeakCanary: boolean access$isRunningTests$p(leakcanary.internal.InternalLeakCanary)
androidx.fragment.app.DialogFragment: DialogFragment()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
leakcanary.internal.AndroidXFragmentDestroyWatcher: kotlin.jvm.functions.Function0 access$getConfigProvider$p(leakcanary.internal.AndroidXFragmentDestroyWatcher)
net.sqlcipher.database.SQLiteQueryBuilder: <clinit>()
net.sqlcipher.CursorWindow$1: CursorWindow$1()
net.sqlcipher.AbstractCursor: android.os.Bundle getExtras()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
net.sqlcipher.CursorWrapper: CursorWrapper(net.sqlcipher.Cursor)
kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo: kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo[] values()
kotlin.reflect.jvm.internal.impl.types.model.CaptureStatus: kotlin.reflect.jvm.internal.impl.types.model.CaptureStatus valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
net.sqlcipher.CursorIndexOutOfBoundsException: CursorIndexOutOfBoundsException(java.lang.String)
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.String[])
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
net.sqlcipher.database.SQLiteCursor: void setSelectionArguments(java.lang.String[])
net.sqlcipher.database.SQLiteQuery: int native_column_count()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind: kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind valueOf(java.lang.String)
net.sqlcipher.AbstractCursor: boolean updateLong(int,long)
com.google.gson.internal.bind.ArrayTypeAdapter$1: ArrayTypeAdapter$1()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType: kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier[] values()
net.sqlcipher.database.SupportHelper: SupportHelper(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration,byte[],net.sqlcipher.database.SQLiteDatabaseHook,boolean)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteQuery access$600(net.sqlcipher.database.SQLiteCursor)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
shark.Hprof$HprofVersion: shark.Hprof$HprofVersion valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDirectCursorDriver: SQLiteDirectCursorDriver(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String)
shark.AndroidResourceIdNames: AndroidResourceIdNames(int[],java.lang.String[])
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
net.sqlcipher.DatabaseUtils: void cursorFloatToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription: kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription[] values()
androidx.navigation.fragment.NavHostFragment: NavHostFragment()
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
net.sqlcipher.CursorWindow: boolean isNull_native(int,int)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
net.sqlcipher.DatabaseUtils: java.lang.String stringForQuery(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String[])
com.google.android.material.button.MaterialButton: int getIconPadding()
net.sqlcipher.UnknownTypeException: UnknownTypeException(java.lang.String)
leakcanary.internal.AndroidHeapDumper: void showToast(leakcanary.internal.FutureResult)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
net.sqlcipher.database.SQLiteDebug: long getHeapAllocatedSize()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
net.sqlcipher.DatabaseUtils$InsertHelper: void prepareForInsert()
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] values()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
com.google.android.material.chip.Chip: void setChipIconResource(int)
androidx.appcompat.widget.SearchView: int getMaxWidth()
net.sqlcipher.AbstractWindowedCursor: double getDouble(int)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
leakcanary.internal.InternalLeakCanary: InternalLeakCanary()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.google.android.material.bottomnavigation.BottomNavigationItemView: int getItemPosition()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
net.sqlcipher.CursorWindow: boolean isFloat_native(int,int)
net.sqlcipher.AbstractCursor: boolean updateFloat(int,float)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.google.android.material.button.MaterialButton: void setIconResource(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
net.sqlcipher.database.SQLiteQuery: void bindString(int,java.lang.String)
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setPresenter(com.google.android.material.bottomnavigation.BottomNavigationPresenter)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
net.sqlcipher.AbstractCursor: android.os.Bundle respond(android.os.Bundle)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.android.material.chip.Chip: void setMinLines(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: FloatingActionButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
net.sqlcipher.CursorWindow: float getFloat(int,int)
net.sqlcipher.database.SQLiteDatabase: void disableWriteAheadLogging()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
net.sqlcipher.BulkCursorProxy: android.os.Bundle getExtras()
net.sqlcipher.DatabaseUtils: java.lang.String dumpCurrentRowToString(net.sqlcipher.Cursor)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getItemTextAppearanceActive()
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemBackground(android.graphics.drawable.Drawable)
kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind: kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind valueOf(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
net.sqlcipher.BulkCursorProxy: boolean getWantsAllOnMoveCalls()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
net.sqlcipher.CursorWrapper: android.database.Cursor getWrappedCursor()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.navigation.NavControllerViewModel: NavControllerViewModel()
net.sqlcipher.AbstractCursor$SelfContentObserver: AbstractCursor$SelfContentObserver(net.sqlcipher.AbstractCursor)
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
leakcanary.internal.InternalLeakCanary: void invoke(android.app.Application)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getWritableDatabase(java.lang.String)
net.sqlcipher.database.SQLiteDebug: void getPagerStats(net.sqlcipher.database.SQLiteDebug$PagerStats)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.material.bottomnavigation.BottomNavigationItemView: com.google.android.material.badge.BadgeDrawable getBadge()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
net.sqlcipher.CursorWindow: boolean isBlob_native(int,int)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
net.sqlcipher.database.SQLiteQuery: int native_fill_window(net.sqlcipher.CursorWindow,int,int,int,int,int)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setBadgeDrawables(android.util.SparseArray)
shark.AndroidObjectInspectors: shark.AndroidObjectInspectors[] values()
kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy[] values()
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$JDKMemberStatus: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$JDKMemberStatus valueOf(java.lang.String)
net.sqlcipher.CursorWindow: boolean isInteger_native(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: kotlin.jvm.functions.Function0 access$getConfigProvider$p(leakcanary.internal.AndroidSupportFragmentDestroyWatcher)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
net.sqlcipher.database.SQLiteDatabase: long insert(java.lang.String,int,android.content.ContentValues)
net.sqlcipher.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)
net.sqlcipher.database.SQLiteConstraintException: SQLiteConstraintException(java.lang.String)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind: kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
net.sqlcipher.database.SQLiteQuery: SQLiteQuery(net.sqlcipher.database.SQLiteDatabase,java.lang.String,int,java.lang.Object[])
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type[] values()
com.google.android.material.bottomnavigation.BottomNavigationView: int getItemTextAppearanceInactive()
net.sqlcipher.database.SQLiteDatabase: void loadLibs(android.content.Context,java.io.File)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
leakcanary.KeyedWeakReference: java.lang.String getKey()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind[] values()
net.sqlcipher.BulkCursorProxy: android.os.IBinder asBinder()
net.sqlcipher.DatabaseUtils$InsertHelper: long insertInternal(android.content.ContentValues,boolean)
net.sqlcipher.CursorWindowAllocation: long getInitialAllocationSize()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.database.SupportHelper$1: void onUpgrade(net.sqlcipher.database.SQLiteDatabase,int,int)
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType[] values()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemTextAppearanceInactive(int)
shark.LeakTraceReference$ReferenceType: shark.LeakTraceReference$ReferenceType valueOf(java.lang.String)
net.sqlcipher.database.SQLiteProgram: void native_bind_null(int)
leakcanary.KeyedWeakReference: long getRetainedUptimeMillis()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
net.sqlcipher.database.SQLiteDatabase: long lastInsertRow()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType[] values()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
net.sqlcipher.database.SQLiteProgram: void bindLong(int,long)
leakcanary.KeyedWeakReference: long getHeapDumpUptimeMillis()
net.sqlcipher.DefaultDatabaseErrorHandler: DefaultDatabaseErrorHandler()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat: kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: boolean containsNull(char[])
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
net.sqlcipher.database.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.Object[])
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.google.gson.internal.bind.TypeAdapters$11: TypeAdapters$11()
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
net.sqlcipher.BulkCursorProxy: java.lang.String[] getColumnNames()
net.sqlcipher.database.SQLiteDatabase: void changePassword(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$12: TypeAdapters$12()
net.sqlcipher.database.SQLiteContentHelper: SQLiteContentHelper()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
net.sqlcipher.database.SQLiteDatabase: SQLiteDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
leakcanary.internal.InternalLeakCanary: android.app.Application getApplication()
net.sqlcipher.database.SqliteWrapper: void checkSQLiteException(android.content.Context,net.sqlcipher.database.SQLiteException)
com.google.gson.internal.bind.TypeAdapters$22: TypeAdapters$22()
com.google.gson.internal.bind.TypeAdapters$6: TypeAdapters$6()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
net.sqlcipher.DefaultCursorWindowAllocation: long getMaxAllocationSize()
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemTextAppearanceActive(int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
net.sqlcipher.database.SQLiteDatabase: void native_rawExecSQL(java.lang.String)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
leakcanary.internal.NotificationReceiver$Action: leakcanary.internal.NotificationReceiver$Action valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
net.sqlcipher.CursorWindow: boolean putNull(int,int)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$Mode: kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$Mode valueOf(java.lang.String)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
net.sqlcipher.database.SQLiteCursor: int getCount()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemRippleColor(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
net.sqlcipher.database.SQLiteQueryBuilder: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.renderer.PropertyAccessorRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.PropertyAccessorRenderingPolicy valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
leakcanary.internal.AndroidHeapDumper: android.content.Context access$getContext$p(leakcanary.internal.AndroidHeapDumper)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability: kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability[] values()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
net.sqlcipher.database.SQLiteStatement: void execute()
net.sqlcipher.DatabaseUtils: void cursorRowToContentValues(net.sqlcipher.Cursor,android.content.ContentValues)
shark.LeakTraceObject$LeakingStatus: shark.LeakTraceObject$LeakingStatus[] values()
leakcanary.internal.InternalLeakCanary: java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary)
kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result: kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result[] values()
net.sqlcipher.AbstractCursor: boolean requery()
net.sqlcipher.CursorWindow: java.lang.String getString(int,int)
net.sqlcipher.database.SupportHelper: androidx.sqlite.db.SupportSQLiteDatabase getReadableDatabase()
com.google.gson.internal.bind.TypeAdapters$16: TypeAdapters$16()
net.sqlcipher.database.SQLiteDatabase$3: void run()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
net.sqlcipher.CursorWindow: long getLong_native(int,int)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
leakcanary.internal.InternalLeakCanary: leakcanary.internal.LeakDirectoryProvider createLeakDirectoryProvider(android.content.Context)
net.sqlcipher.database.SQLiteDatabaseHook: void preKey(net.sqlcipher.database.SQLiteDatabase)
shark.LeakNodeStatus: shark.LeakNodeStatus[] values()
net.sqlcipher.database.SQLiteDatabase$5: SQLiteDatabase$5(net.sqlcipher.database.SQLiteDatabase,android.database.sqlite.SQLiteTransactionListener)
net.sqlcipher.MatrixCursor: MatrixCursor(java.lang.String[],int)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getItemTextAppearanceInactive()
net.sqlcipher.BulkCursorToCursorAdaptor: android.os.Bundle respond(android.os.Bundle)
net.sqlcipher.database.SQLiteAbortException: SQLiteAbortException()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteQueryBuilder: void setStrictProjectionMap(boolean)
net.sqlcipher.database.SQLiteCompiledSql: void native_compile(java.lang.String)
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.io.File,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
net.sqlcipher.database.SQLiteCursor: SQLiteCursor(net.sqlcipher.database.SQLiteDatabase,net.sqlcipher.database.SQLiteCursorDriver,java.lang.String,net.sqlcipher.database.SQLiteQuery)
kotlin.Metadata: int[] bv()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.google.gson.internal.bind.TypeAdapters$30: TypeAdapters$30()
leakcanary.internal.InternalLeakCanary$FormFactor: leakcanary.internal.InternalLeakCanary$FormFactor valueOf(java.lang.String)
net.sqlcipher.CursorWindow: boolean allocRow()
net.sqlcipher.database.SQLiteCursor: void registerDataSetObserver(android.database.DataSetObserver)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.CustomCursorWindowAllocation: long getInitialAllocationSize()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase$4: void onBegin()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: android.util.Pair getResultFromPragma(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.AbstractCursor: boolean moveToLast()
net.sqlcipher.IBulkCursor: java.lang.String[] getColumnNames()
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.DatabaseUtils: void cursorStringToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
net.sqlcipher.database.SQLiteAbortException: SQLiteAbortException(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.material.bottomnavigation.BottomNavigationView: int getItemBackgroundResource()
net.sqlcipher.AbstractCursor: boolean isFieldUpdated(int)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
net.sqlcipher.database.SQLiteCursor: void finalize()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
net.sqlcipher.database.SQLiteDatabase: <clinit>()
shark.PrimitiveType: shark.PrimitiveType valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler: SQLiteCursor$MainThreadNotificationHandler(net.sqlcipher.database.SQLiteCursor)
net.sqlcipher.BulkCursorToCursorAdaptor: boolean onMove(int,int)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
net.sqlcipher.AbstractCursor: boolean moveToPosition(int)
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind[] values()
androidx.cardview.widget.CardView: int getContentPaddingLeft()
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
net.sqlcipher.database.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])
leakcanary.internal.DisplayLeakConnectorView$Type: leakcanary.internal.DisplayLeakConnectorView$Type valueOf(java.lang.String)
net.sqlcipher.database.SQLiteQuery: SQLiteQuery(net.sqlcipher.database.SQLiteDatabase,java.lang.String,int,java.lang.String[])
com.google.android.material.bottomnavigation.BottomNavigationView: int getSelectedItemId()
kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$CallMode: kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$CallMode valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
net.sqlcipher.BulkCursorProxy: BulkCursorProxy(android.os.IBinder)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
net.sqlcipher.DatabaseUtils: void cursorStringToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
net.sqlcipher.CursorWindow: void setRequiredPosition(int)
kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind: kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind[] values()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListenerInternal(net.sqlcipher.database.SQLiteTransactionListener,net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType)
kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation: kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation valueOf(java.lang.String)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
shark.OnAnalysisProgressListener$Step: shark.OnAnalysisProgressListener$Step valueOf(java.lang.String)
com.example.gamecatalogue.favorite.FavoriteActivity: FavoriteActivity()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase create(net.sqlcipher.database.SQLiteDatabase$CursorFactory,char[])
com.google.android.material.card.MaterialCardView: void setProgress(float)
net.sqlcipher.CursorWindow: boolean putLong_native(long,int,int)
net.sqlcipher.database.SQLiteDatabase$5: void onRollback()
net.sqlcipher.database.SQLiteQuery: void requery()
kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberDescriptor$CoroutinesCompatibilityMode: kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberDescriptor$CoroutinesCompatibilityMode valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
net.sqlcipher.AbstractCursor: boolean move(int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
net.sqlcipher.BulkCursorToCursorAdaptor: void registerDataSetObserver(android.database.DataSetObserver)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
net.sqlcipher.AbstractCursor: boolean isAfterLast()
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
shark.LeakTraceElement$Holder: shark.LeakTraceElement$Holder[] values()
net.sqlcipher.database.SQLiteCursor: void close()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility[] values()
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
net.sqlcipher.AbstractCursor: void registerContentObserver(android.database.ContentObserver)
net.sqlcipher.IBulkCursor: android.os.Bundle getExtras()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
net.sqlcipher.database.SQLiteDatabase: boolean yieldIfContended()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteQuery: java.lang.String native_column_name(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
net.sqlcipher.DatabaseUtils: void cursorDoubleToCursorValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
com.example.gamecatalogue.MyApplication: MyApplication()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind valueOf(java.lang.String)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
leakcanary.internal.InternalLeakCanary: java.lang.Object noOpDelegate()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor rawQueryWithFactory(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)
net.sqlcipher.AbstractWindowedCursor: float getFloat(int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
net.sqlcipher.database.SQLiteCursor: void queryThreadUnlock()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
net.sqlcipher.UnknownTypeException: UnknownTypeException()
androidx.activity.ComponentActivity: ComponentActivity()
net.sqlcipher.IBulkCursor: boolean getWantsAllOnMoveCalls()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: boolean isWriteAheadLoggingEnabled()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
net.sqlcipher.database.SQLiteDatabase: java.lang.String getTime()
net.sqlcipher.BulkCursorToCursorAdaptor: void close()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.google.gson.internal.bind.TypeAdapters$10: TypeAdapters$10()
kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$Origin: kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$Origin valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
net.sqlcipher.AbstractCursor: int getCount()
net.sqlcipher.AbstractWindowedCursor: boolean isFloat(int)
net.sqlcipher.CursorWindow: boolean isBlob(int,int)
leakcanary.internal.DisplayLeakConnectorView: void setType(leakcanary.internal.DisplayLeakConnectorView$Type)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setIconSize(int)
net.sqlcipher.database.SQLiteDatabase: void dbclose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
net.sqlcipher.database.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
net.sqlcipher.DefaultCursorWindowAllocation: long getGrowthPaddingSize()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
leakcanary.internal.InternalLeakCanary$FormFactor: leakcanary.internal.InternalLeakCanary$FormFactor[] values()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier: kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: boolean enableWriteAheadLogging()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)
net.sqlcipher.DatabaseUtils: DatabaseUtils()
net.sqlcipher.database.SQLiteDatabase: void rawExecSQL(java.lang.String)
kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType: kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType[] values()
net.sqlcipher.database.SQLiteDirectCursorDriver: void cursorClosed()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.example.gamecatalogue.MainActivity: MainActivity()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: int getIconSize()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
net.sqlcipher.database.SQLiteCompiledSql: void finalize()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus: kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus[] values()
net.sqlcipher.database.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
leakcanary.internal.InternalLeakCanary: boolean isInstantApp()
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
net.sqlcipher.CursorWindow: java.lang.String getString_native(int,int)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
net.sqlcipher.database.SQLiteCursor: void fillWindow(int)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
net.sqlcipher.StaleDataException: StaleDataException(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
net.sqlcipher.MatrixCursor$RowBuilder: MatrixCursor$RowBuilder(net.sqlcipher.MatrixCursor,int,int)
net.sqlcipher.database.SQLiteDatabase: void openDatabaseInternal(byte[],net.sqlcipher.database.SQLiteDatabaseHook)
net.sqlcipher.CursorWindow: int getInt(int,int)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteCursorDriver: void setBindArguments(java.lang.String[])
net.sqlcipher.database.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$200(net.sqlcipher.database.SQLiteCursor)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.lifecycle.LifecycleCoroutineScope: LifecycleCoroutineScope()
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
net.sqlcipher.DatabaseUtils: java.lang.String dumpCursorToString(net.sqlcipher.Cursor)
net.sqlcipher.database.SQLiteCursor: boolean commitUpdates(java.util.Map)
com.google.android.material.chip.Chip: void setMaxWidth(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$LowerCapturedTypePolicy: kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$LowerCapturedTypePolicy[] values()
leakcanary.internal.InternalLeakCanary: leakcanary.internal.HeapDumpTrigger access$getHeapDumpTrigger$p(leakcanary.internal.InternalLeakCanary)
net.sqlcipher.database.SupportFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability: kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability valueOf(java.lang.String)
net.sqlcipher.CursorWindow$1: net.sqlcipher.CursorWindow[] newArray(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
net.sqlcipher.database.SQLiteDirectCursorDriver: void cursorDeactivated()
net.sqlcipher.CursorWindow: void freeLastRow_native()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.MatrixCursor: java.lang.Object get(int)
com.google.gson.internal.bind.TypeAdapters$29: TypeAdapters$29()
kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy[] values()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level valueOf(java.lang.String)
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemTextColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.AbstractCursor: boolean hasUpdates()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.google.android.material.chip.Chip: float getChipEndPadding()
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract[] values()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.google.gson.internal.bind.TypeAdapters$28: TypeAdapters$28()
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.google.android.material.button.MaterialButton: int getInsetBottom()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
net.sqlcipher.MatrixCursor: double getDouble(int)
net.sqlcipher.CursorWindowAllocation: long getMaxAllocationSize()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)
net.sqlcipher.database.SQLiteException: SQLiteException()
net.sqlcipher.AbstractCursor: boolean updateString(int,java.lang.String)
net.sqlcipher.BulkCursorToCursorAdaptor: int getCount()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory)
net.sqlcipher.CursorWindow: boolean putBlob(byte[],int,int)
net.sqlcipher.AbstractCursor: java.lang.String getColumnName(int)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus: kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus valueOf(java.lang.String)
shark.PrimitiveType: shark.PrimitiveType[] values()
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
net.sqlcipher.BulkCursorToCursorAdaptor: boolean deleteRow()
net.sqlcipher.database.SQLiteDatabase: void purgeFromCompiledSqlCache(java.lang.String)
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$Kind: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$Kind[] values()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
net.sqlcipher.database.SupportHelper$1: SupportHelper$1(net.sqlcipher.database.SupportHelper,android.content.Context,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.database.SQLiteDatabase: void lock()
com.google.android.material.button.MaterialButton: int getTextHeight()
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)
shark.OnAnalysisProgressListener$Step: shark.OnAnalysisProgressListener$Step[] values()
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
net.sqlcipher.CursorWindow$1: java.lang.Object[] newArray(int)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
leakcanary.KeyedWeakReference: KeyedWeakReference(java.lang.Object,java.lang.String,java.lang.String,long,java.lang.ref.ReferenceQueue)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setEnabled(boolean)
net.sqlcipher.database.SQLiteProgram: void compile(java.lang.String,boolean)
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getReadableDatabase(byte[])
net.sqlcipher.DatabaseErrorHandler: void onCorruption(net.sqlcipher.database.SQLiteDatabase)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
net.sqlcipher.database.SQLiteContentHelper: android.os.MemoryFile simpleQueryForBlobMemoryFile(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String[])
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.google.gson.internal.bind.TypeAdapters$2: TypeAdapters$2()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: void loadLibs(android.content.Context,java.io.File,net.sqlcipher.database.SQLiteDatabase$LibraryLoader)
kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$QualifierApplicabilityType: kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$QualifierApplicabilityType valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget[] values()
net.sqlcipher.database.SQLiteQueryStats: long getTotalQueryResultSize()
com.google.android.material.bottomnavigation.BottomNavigationView: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.AbstractCursor: void notifyDataSetChange()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setItemPosition(int)
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
net.sqlcipher.SQLException: SQLException(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook)
net.sqlcipher.database.SQLiteQuery: int fillWindow(net.sqlcipher.CursorWindow,int,int)
net.sqlcipher.DatabaseUtils: char[] encodeHex(byte[],char[])
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.google.gson.internal.bind.TimeTypeAdapter$1: TimeTypeAdapter$1()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.BulkCursorToCursorAdaptor: boolean requery()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler: void handleMessage(android.os.Message)
net.sqlcipher.database.SupportHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
net.sqlcipher.database.SQLiteStatement: java.lang.String native_1x1_string()
kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType: kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType[] values()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
net.sqlcipher.database.SQLiteCursor: void setLoadStyle(int,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
net.sqlcipher.DatabaseUtils: void cursorStringToInsertHelper(net.sqlcipher.Cursor,java.lang.String,net.sqlcipher.DatabaseUtils$InsertHelper,int)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility: kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility valueOf(java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
net.sqlcipher.DefaultDatabaseErrorHandler: void onCorruption(net.sqlcipher.database.SQLiteDatabase)
net.sqlcipher.database.SQLiteDatabase: int status(int,boolean)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.google.gson.internal.bind.TypeAdapters$24: TypeAdapters$24()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.example.gamecatalogue.presentation.detail.DetailActivity: DetailActivity()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemIconSize(int)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.DatabaseUtils: void cursorShortToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
net.sqlcipher.database.SQLiteCursor: boolean access$002(net.sqlcipher.database.SQLiteCursor,boolean)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
net.sqlcipher.database.SQLiteDatabase$1: void loadLibraries(java.lang.String[])
net.sqlcipher.DatabaseUtils: void cursorIntToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
org.koin.core.definition.Kind: org.koin.core.definition.Kind[] values()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier: kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier[] values()
com.google.android.material.bottomnavigation.BottomNavigationView: android.graphics.drawable.Drawable getItemBackground()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.google.gson.internal.bind.ObjectTypeAdapter$1: ObjectTypeAdapter$1()
net.sqlcipher.database.SQLiteDirectCursorDriver: void cursorRequeried(android.database.Cursor)
net.sqlcipher.CursorWindow: boolean putNull_native(int,int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$Mode: kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$Mode[] values()
shark.Hprof$HprofVersion: shark.Hprof$HprofVersion[] values()
androidx.cardview.widget.CardView: float getMaxCardElevation()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
kotlin.Metadata: java.lang.String[] d2()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.types.model.TypeVariance: kotlin.reflect.jvm.internal.impl.types.model.TypeVariance[] values()
net.sqlcipher.database.SQLiteDatabase: void native_setLocale(java.lang.String,int)
leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus: leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus valueOf(java.lang.String)
leakcanary.internal.InternalLeakCanary: void registerResumedActivityListener(android.app.Application)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
net.sqlcipher.database.SQLiteDatabase: void deallocCachedSqlStatements()
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.types.Variance: kotlin.reflect.jvm.internal.impl.types.Variance valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.example.gamecatalogue.presentation.favorite.FavoriteFragment: FavoriteFragment()
net.sqlcipher.IBulkCursor: int count()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteClosable: void releaseReference()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
net.sqlcipher.database.SQLiteCursor: void fillWindow(int,android.database.CursorWindow)
net.sqlcipher.database.SQLiteDatabase: int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[])
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
net.sqlcipher.database.SQLiteClosable: void onAllReferencesReleased()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
net.sqlcipher.AbstractWindowedCursor: boolean isBlob(int)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getReadableDatabase(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
net.sqlcipher.DatabaseUtils$InsertHelper: void buildSQL()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
net.sqlcipher.CursorWindow: void close_native()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
net.sqlcipher.CursorWindow: CursorWindow(boolean)
net.sqlcipher.DatabaseUtils: void dumpCurrentRow(net.sqlcipher.Cursor,java.io.PrintStream)
net.sqlcipher.database.SQLiteDatabase: void rowUpdated(java.lang.String,long)
net.sqlcipher.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()
net.sqlcipher.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemHorizontalTranslationEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
net.sqlcipher.database.SQLiteOpenHelper: SQLiteOpenHelper(android.content.Context,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int)
net.sqlcipher.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)
leakcanary.internal.AndroidXFragmentDestroyWatcher: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: void unlock()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
net.sqlcipher.AbstractCursor: boolean isFirst()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
net.sqlcipher.DatabaseUtils: void cursorLongToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
net.sqlcipher.database.SQLiteDatabase: void setVersion(int)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.android.material.bottomnavigation.BottomNavigationView: void setOnNavigationItemSelectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
net.sqlcipher.BulkCursorProxy: net.sqlcipher.CursorWindow getWindow(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
leakcanary.internal.LeakCanaryFileProvider: LeakCanaryFileProvider()
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
net.sqlcipher.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
net.sqlcipher.IContentObserver: void onChange(boolean)
net.sqlcipher.database.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)
net.sqlcipher.AbstractWindowedCursor: void checkPosition()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
net.sqlcipher.DatabaseUtils: void cursorIntToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy[] values()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
net.sqlcipher.database.SQLiteDebug$DbStats: SQLiteDebug$DbStats(java.lang.String,long,long,int)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.gson.TypeAdapter: TypeAdapter()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
com.google.android.material.chip.Chip: float getIconStartPadding()
net.sqlcipher.database.SQLiteDebug$PagerStats: SQLiteDebug$PagerStats()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
net.sqlcipher.database.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipGroup: int getChipCount()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setBadgeIfNeeded(com.google.android.material.bottomnavigation.BottomNavigationItemView)
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemIconTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
net.sqlcipher.CustomCursorWindowAllocation: long getGrowthPaddingSize()
shark.LeakTraceObject$LeakingStatus: shark.LeakTraceObject$LeakingStatus valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteProgram: void native_bind_string(int,java.lang.String)
androidx.lifecycle.ViewModelStore: ViewModelStore()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
net.sqlcipher.database.SQLiteDatabase: void addToCompiledQueries(java.lang.String,net.sqlcipher.database.SQLiteCompiledSql)
com.google.gson.internal.bind.TypeAdapters$4: TypeAdapters$4()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SupportFactory: SupportFactory(byte[])
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
net.sqlcipher.CrossProcessCursorWrapper: void fillWindow(int,android.database.CursorWindow)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
net.sqlcipher.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)
net.sqlcipher.CursorWindow: boolean putLong(long,int,int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(net.sqlcipher.database.SQLiteTransactionListener)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
net.sqlcipher.database.SQLiteDatabase: void rekey(byte[])
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: void invoke(android.app.Activity)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
net.sqlcipher.database.SupportHelper$1: void onCreate(net.sqlcipher.database.SQLiteDatabase)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.google.android.material.bottomnavigation.BottomNavigationView: void setSelectedItemId(int)
net.sqlcipher.CursorWindow: int getNumRows()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$QualifierApplicabilityType: kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$QualifierApplicabilityType[] values()
com.google.android.material.internal.FlowLayout: int getLineSpacing()
leakcanary.internal.InternalLeakCanary: void disableDumpHeapInTests()
net.sqlcipher.MatrixCursor: float getFloat(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.gson.internal.bind.TypeAdapters$26: TypeAdapters$26()
net.sqlcipher.DatabaseUtils$InsertHelper: void prepareForReplace()
com.google.android.material.bottomnavigation.BottomNavigationView: android.view.Menu getMenu()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
net.sqlcipher.AbstractCursor: java.lang.String getString(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook)
net.sqlcipher.MatrixCursor: java.lang.String getString(int)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.CursorWindow: double getDouble_native(int,int)
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
net.sqlcipher.CrossProcessCursorWrapper: boolean onMove(int,int)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
net.sqlcipher.AbstractCursor: android.database.CursorWindow getWindow()
net.sqlcipher.database.SQLiteTransactionListener: void onCommit()
leakcanary.AndroidLeakFixes: leakcanary.AndroidLeakFixes[] values()
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
net.sqlcipher.database.DatabaseObjectNotClosedException: DatabaseObjectNotClosedException()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteQueryStats getQueryStats(java.lang.String,java.lang.Object[])
net.sqlcipher.CursorWindow: boolean putString_native(java.lang.String,int,int)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
net.sqlcipher.database.SQLiteDatabase: void loadLibs(android.content.Context,net.sqlcipher.database.SQLiteDatabase$LibraryLoader)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
net.sqlcipher.AbstractCursor$SelfContentObserver: boolean deliverSelfNotifications()
net.sqlcipher.AbstractCursor: boolean moveToPrevious()
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteDatabase: java.util.Map getSyncedTables()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setIconTintList(android.content.res.ColorStateList)
leakcanary.internal.RequestStoragePermissionActivity: RequestStoragePermissionActivity()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
net.sqlcipher.database.SQLiteFullException: SQLiteFullException(java.lang.String)
net.sqlcipher.AbstractCursor: boolean supportsUpdates()
net.sqlcipher.database.SQLiteDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemTextAppearanceActive(int)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
net.sqlcipher.database.SQLiteQueryStats: SQLiteQueryStats(long,long)
com.google.gson.internal.bind.SqlDateTypeAdapter: SqlDateTypeAdapter()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat: kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat valueOf(java.lang.String)
net.sqlcipher.MatrixCursor: short getShort(int)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
net.sqlcipher.AbstractCursor: long getLong(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
net.sqlcipher.MatrixCursor: void ensureCapacity(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
net.sqlcipher.database.SQLiteCursor: void setFillWindowForwardOnly(boolean)
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getWritableDatabase(char[])
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
shark.LeakTraceObject$ObjectType: shark.LeakTraceObject$ObjectType[] values()
androidx.appcompat.widget.SearchView: int getInputType()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
net.sqlcipher.database.SQLiteProgram: void onAllReferencesReleasedFromContainer()
net.sqlcipher.database.SQLiteDatabase: void checkLockHoldTime()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,byte[])
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.CursorWindow access$100(net.sqlcipher.database.SQLiteCursor)
com.google.android.material.chip.Chip: void setChipTextResource(int)
net.sqlcipher.database.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
com.google.gson.internal.Excluder: Excluder()
net.sqlcipher.database.SQLiteQueryBuilder: void appendClause(java.lang.StringBuilder,java.lang.String,java.lang.String)
net.sqlcipher.database.SQLiteCursor: void deactivateCommon()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getItemBackgroundRes()
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition[] values()
net.sqlcipher.StaleDataException: StaleDataException()
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
net.sqlcipher.database.SQLiteProgram: void bindNull(int)
net.sqlcipher.DatabaseUtils: <clinit>()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
net.sqlcipher.DatabaseUtils: void cursorLongToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind: kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind[] values()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
net.sqlcipher.MatrixCursor: boolean isNull(int)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] values()
net.sqlcipher.DatabaseUtils$InsertHelper: long execute()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
leakcanary.internal.InternalLeakCanary: void access$setApplicationVisible$p(leakcanary.internal.InternalLeakCanary,boolean)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
leakcanary.internal.InternalLeakCanary: void access$setHeapDumpTrigger$p(leakcanary.internal.InternalLeakCanary,leakcanary.internal.HeapDumpTrigger)
net.sqlcipher.DefaultCursorWindowAllocation: DefaultCursorWindowAllocation()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
androidx.constraintlayout.widget.Barrier: int getType()
net.sqlcipher.database.SQLiteDatabase: java.util.ArrayList getAttachedDbs(net.sqlcipher.database.SQLiteDatabase)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
net.sqlcipher.AbstractCursor: boolean deleteRow()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemIconSize(int)
kotlin.reflect.jvm.internal.impl.types.model.TypeVariance: kotlin.reflect.jvm.internal.impl.types.model.TypeVariance valueOf(java.lang.String)
shark.ObjectInspectors: shark.ObjectInspectors[] values()
leakcanary.KeyedWeakReference: void setRetainedUptimeMillis(long)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
net.sqlcipher.AbstractWindowedCursor: long getLong(int)
com.google.android.material.chip.Chip: void setElevation(float)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
net.sqlcipher.AbstractCursor: int getColumnIndex(java.lang.String)
net.sqlcipher.DatabaseUtils$InsertHelper: void close()
net.sqlcipher.database.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])
net.sqlcipher.AbstractCursor: boolean updateToNull(int)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: void unlockForced()
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
net.sqlcipher.AbstractCursor: void onChange(boolean)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
net.sqlcipher.database.SQLiteDebug: net.sqlcipher.database.SQLiteDebug$PagerStats getDatabaseInfo()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind valueOf(java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
net.sqlcipher.database.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.gson.internal.bind.TypeAdapters$14: TypeAdapters$14()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
net.sqlcipher.AbstractCursor: int getInt(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.IContentObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
net.sqlcipher.database.SQLiteDatabase: void closeClosable()
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
net.sqlcipher.CursorWindow: android.os.IBinder native_getBinder()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
leakcanary.KeyedWeakReference: java.lang.String getDescription()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind[] values()
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
net.sqlcipher.database.SQLiteDebug: <clinit>()
net.sqlcipher.database.SQLiteCursor$QueryThread: void sendMessage()
net.sqlcipher.database.SQLiteProgram: void bindString(int,java.lang.String)
kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType: kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: SQLiteDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$EnrichedProjectionKind: kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$EnrichedProjectionKind valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
net.sqlcipher.database.SQLiteDebug: int getNumActiveCursorsFinalized()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.google.gson.internal.bind.TimeTypeAdapter: TimeTypeAdapter()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
kotlin.reflect.jvm.internal.impl.name.State: kotlin.reflect.jvm.internal.impl.name.State valueOf(java.lang.String)
leakcanary.internal.InternalLeakCanary: void _application$annotations()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
net.sqlcipher.CursorWindowAllocation: long getGrowthPaddingSize()
kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: void changePassword(char[])
net.sqlcipher.CursorWindow: boolean putString(java.lang.String,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
net.sqlcipher.database.SQLiteProgram: void releaseCompiledSqlIfNotInCache()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setIcon(android.graphics.drawable.Drawable)
leakcanary.internal.NotificationType: leakcanary.internal.NotificationType valueOf(java.lang.String)
net.sqlcipher.SQLException: SQLException()
net.sqlcipher.CursorWindow: void native_init(android.os.IBinder)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
net.sqlcipher.AbstractWindowedCursor: void setWindow(net.sqlcipher.CursorWindow)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
net.sqlcipher.database.SQLiteCursorDriver: void cursorClosed()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType[] values()
net.sqlcipher.database.SQLiteDoneException: SQLiteDoneException()
net.sqlcipher.RowAllocationException: RowAllocationException()
net.sqlcipher.database.SQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)
net.sqlcipher.database.SQLiteDatabase: boolean needUpgrade(int)
net.sqlcipher.CursorWindow: boolean putDouble_native(double,int,int)
net.sqlcipher.CursorWindow: boolean setNumColumns_native(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
kotlin.Metadata: int k()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setLabelVisibilityMode(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteCompiledSql getCompiledStatementForSql(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
net.sqlcipher.CursorWindow: void close()
shark.LeakTrace$GcRootType: shark.LeakTrace$GcRootType valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
net.sqlcipher.database.SQLiteQueryBuilder: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind valueOf(java.lang.String)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
net.sqlcipher.database.SQLiteDatabase: void resetCompiledSqlCache()
shark.AndroidReferenceMatchers: shark.AndroidReferenceMatchers valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind: kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
leakcanary.internal.InternalLeakCanary: boolean access$getApplicationVisible$p(leakcanary.internal.InternalLeakCanary)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] values()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.gson.internal.bind.SqlDateTypeAdapter$1: SqlDateTypeAdapter$1()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
kotlin.DeprecationLevel: kotlin.DeprecationLevel valueOf(java.lang.String)
net.sqlcipher.DatabaseUtils: void dumpCurrentRow(net.sqlcipher.Cursor)
net.sqlcipher.DatabaseUtils: void dumpCursor(net.sqlcipher.Cursor)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$Origin: kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$Origin[] values()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteDebug: long getHeapFreeSize()
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
net.sqlcipher.database.SQLiteQuery: void bindArguments(java.lang.Object[])
net.sqlcipher.database.SQLiteDebug: void notifyActiveCursorFinalized()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
net.sqlcipher.database.SQLiteOpenHelper: SQLiteOpenHelper(android.content.Context,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.bottomnavigation.BottomNavigationView: int getMaxItemCount()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.chip.Chip: float getChipCornerRadius()
net.sqlcipher.BulkCursorToCursorAdaptor: void registerContentObserver(android.database.ContentObserver)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality valueOf(java.lang.String)
net.sqlcipher.AbstractCursor: boolean isClosed()
net.sqlcipher.CursorWindow: CursorWindow(android.os.Parcel,int)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
net.sqlcipher.database.SQLiteDatabase: boolean isReadOnly()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess: kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess[] values()
net.sqlcipher.database.SQLiteDatabase: void setLockingEnabled(boolean)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
leakcanary.internal.InternalLeakCanary: void setResumedActivity(android.app.Activity)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.google.gson.Gson$FutureTypeAdapter: Gson$FutureTypeAdapter()
kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue: kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue valueOf(java.lang.String)
net.sqlcipher.AbstractCursor: java.lang.Object getUpdatedField(int)
com.google.android.material.bottomnavigation.BottomNavigationView: void setOnNavigationItemReselectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
net.sqlcipher.AbstractCursor$SelfContentObserver: void onChange(boolean)
leakcanary.KeyedWeakReference: long getWatchUptimeMillis()
com.google.gson.internal.bind.TypeAdapters$9: TypeAdapters$9()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
net.sqlcipher.database.SQLiteDatabase: int native_getDbLookaside()
kotlin.reflect.jvm.internal.impl.renderer.PropertyAccessorRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.PropertyAccessorRenderingPolicy[] values()
leakcanary.internal.InternalLeakCanary: java.lang.String getTestClassName()
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
net.sqlcipher.database.SQLiteQueryStats: long getLargestIndividualRowSize()
net.sqlcipher.database.SQLiteDatabase: void onCorruption()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
net.sqlcipher.database.SQLiteDatabase: int lastChangeCount()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
leakcanary.internal.InternalLeakCanary: void checkRunningInDebuggableBuild()
net.sqlcipher.database.SQLiteDatabase: void finalize()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
net.sqlcipher.MatrixCursor: int getInt(int)
net.sqlcipher.BulkCursorToCursorAdaptor: void unregisterContentObserver(android.database.ContentObserver)
net.sqlcipher.CursorWrapper: int getType(int)
shark.LeakTraceElement$Holder: shark.LeakTraceElement$Holder valueOf(java.lang.String)
net.sqlcipher.DatabaseUtils: long longForQuery(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String[])
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
net.sqlcipher.Cursor: int getType(int)
net.sqlcipher.database.SQLiteDatabase: void setICURoot(java.lang.String)
net.sqlcipher.CursorWindow: <clinit>()
net.sqlcipher.database.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.Object[])
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
net.sqlcipher.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteClosable: void acquireReference()
net.sqlcipher.AbstractCursor: boolean isBeforeFirst()
com.google.gson.internal.bind.TypeAdapters$5: TypeAdapters$5()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
shark.LeakNodeStatus: shark.LeakNodeStatus valueOf(java.lang.String)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButtonToggleGroup: java.lang.CharSequence getAccessibilityClassName()
net.sqlcipher.CursorWindow: boolean putDouble(double,int,int)
net.sqlcipher.MatrixCursor: int getType(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType: kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
net.sqlcipher.AbstractCursor: boolean moveToNext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
net.sqlcipher.AbstractCursor: AbstractCursor()
net.sqlcipher.CursorWindow: void native_init(boolean,long,long,long)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
net.sqlcipher.AbstractCursor: boolean updateInt(int,int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
net.sqlcipher.database.SQLiteProgram: void clearBindings()
shark.AndroidResourceIdNames: <clinit>()
net.sqlcipher.AbstractWindowedCursor: boolean isString(int)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
net.sqlcipher.AbstractCursor: void finalize()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
net.sqlcipher.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)
net.sqlcipher.database.SQLiteCursor$QueryThread: SQLiteCursor$QueryThread(net.sqlcipher.database.SQLiteCursor,int)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
kotlin.reflect.jvm.internal.impl.descriptors.Modality: kotlin.reflect.jvm.internal.impl.descriptors.Modality valueOf(java.lang.String)
net.sqlcipher.CursorWindow$1: net.sqlcipher.CursorWindow createFromParcel(android.os.Parcel)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget[] values()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getReadableDatabase(char[])
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
net.sqlcipher.database.SQLiteCursor: boolean requery()
net.sqlcipher.database.SQLiteDatabase: void removeSQLiteClosable(net.sqlcipher.database.SQLiteClosable)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: <clinit>()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
leakcanary.internal.NotificationReceiver$Action: leakcanary.internal.NotificationReceiver$Action[] values()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
net.sqlcipher.database.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)
net.sqlcipher.BulkCursorToCursorAdaptor: void unregisterDataSetObserver(android.database.DataSetObserver)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
leakcanary.KeyedWeakReference: <clinit>()
com.google.gson.internal.bind.TypeAdapters$8: TypeAdapters$8()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
net.sqlcipher.DatabaseUtils: void cursorStringToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
net.sqlcipher.IContentObserver$Stub$Proxy: void onChange(boolean)
net.sqlcipher.DatabaseUtils$InsertHelper: long replace(android.content.ContentValues)
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteDatabase: boolean yieldIfContendedSafely()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
net.sqlcipher.database.SQLiteProgram: void native_compile(java.lang.String)
net.sqlcipher.BulkCursorProxy: void onMove(int)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
net.sqlcipher.BulkCursorProxy: boolean updateRows(java.util.Map)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setItemBackground(int)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
net.sqlcipher.CursorWindow: void freeLastRow()
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getWritableDatabase(byte[])
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
net.sqlcipher.database.SQLiteDatabase: byte[] getBytes(char[])
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.BulkCursorToCursorAdaptor: void set(net.sqlcipher.IBulkCursor)
net.sqlcipher.database.SQLiteDatabase: boolean isOpen()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)
leakcanary.internal.NotificationReceiver: NotificationReceiver()
net.sqlcipher.database.SQLiteCompiledSql: void compile(java.lang.String,boolean)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
leakcanary.internal.InternalLeakCanary: boolean getApplicationVisible()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] values()
leakcanary.internal.AppWatcherInstaller: AppWatcherInstaller()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
net.sqlcipher.database.SQLiteQuery: java.lang.String toString()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,double)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
net.sqlcipher.database.SQLiteQueryBuilder: void setCursorFactory(net.sqlcipher.database.SQLiteDatabase$CursorFactory)
net.sqlcipher.AbstractCursor: boolean commitUpdates()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
net.sqlcipher.database.SQLiteStatement: long native_1x1_long()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
net.sqlcipher.database.SQLiteDatabase: void access$000(net.sqlcipher.database.SQLiteDatabase,byte[])
net.sqlcipher.database.SQLiteDiskIOException: SQLiteDiskIOException()
net.sqlcipher.database.SQLiteDatabase: void native_execSQL(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.example.gamecatalogue.presentation.profile.ProfileFragment: ProfileFragment()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
net.sqlcipher.database.SQLiteDatabase: int getVersion()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
net.sqlcipher.DatabaseUtils: java.lang.String stringForQuery(net.sqlcipher.database.SQLiteStatement,java.lang.String[])
net.sqlcipher.database.SQLiteDatabase: char[] getChars(byte[])
net.sqlcipher.AbstractCursor: boolean commitUpdates(java.util.Map)
net.sqlcipher.database.SupportHelper$1: void onConfigure(net.sqlcipher.database.SQLiteDatabase)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.IBulkCursor: void deactivate()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
net.sqlcipher.CursorWindow: boolean isString(int,int)
net.sqlcipher.CursorWindow: short getShort(int,int)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
net.sqlcipher.InvalidRowColumnException: InvalidRowColumnException(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: java.util.List getAttachedDbs()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
net.sqlcipher.database.SQLiteDatabase: void lockForced()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
net.sqlcipher.database.SQLiteDatabase: boolean isInCompiledSqlCache(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
net.sqlcipher.database.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
net.sqlcipher.CustomCursorWindowAllocation: CustomCursorWindowAllocation(long,long,long)
net.sqlcipher.database.SQLiteMisuseException: SQLiteMisuseException()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.google.gson.internal.bind.TypeAdapters$27: TypeAdapters$27()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
net.sqlcipher.CursorWindow: char[] copyStringToBuffer_native(int,int,int,android.database.CharArrayBuffer)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
kotlin.Metadata: int xi()
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
leakcanary.internal.AppWatcherInstaller$MainProcess: AppWatcherInstaller$MainProcess()
net.sqlcipher.database.SQLiteDatabase: boolean yieldIfContendedSafely(long)
kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$CallMode: kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$CallMode[] values()
org.koin.core.logger.Level: org.koin.core.logger.Level[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: void key_mutf8(char[])
com.google.android.material.card.MaterialCardView: void setRadius(float)
net.sqlcipher.CursorWindow: int getNumRows_native()
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteStatement getStatement(boolean)
net.sqlcipher.database.SQLiteCursorDriver: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.String[])
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
net.sqlcipher.database.SQLiteProgram: long getUniqueId()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
net.sqlcipher.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
kotlin.Metadata: int[] mv()
net.sqlcipher.database.SQLiteDatabase: void beginTransaction()
org.koin.core.logger.Level: org.koin.core.logger.Level valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,int)
kotlin.Metadata: java.lang.String[] d1()
com.google.android.material.chip.Chip: void setCheckableResource(int)
net.sqlcipher.AbstractCursor: boolean moveToFirst()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setChecked(boolean)
net.sqlcipher.database.SQLiteDatabase$5: void onCommit()
net.sqlcipher.AbstractCursor: net.sqlcipher.CursorWindow getWindow()
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
com.google.android.material.bottomnavigation.BottomNavigationView: void setElevation(float)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberDescriptor$CoroutinesCompatibilityMode: kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberDescriptor$CoroutinesCompatibilityMode[] values()
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$JDKMemberStatus: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$JDKMemberStatus[] values()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
net.sqlcipher.database.SQLiteProgram: void close()
net.sqlcipher.MatrixCursor: void addRow(java.util.ArrayList,int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
net.sqlcipher.database.SQLiteCursor: void deactivate()
net.sqlcipher.database.SQLiteStatement: long executeInsert()
net.sqlcipher.database.SQLiteCursor: java.lang.String[] getColumnNames()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
net.sqlcipher.database.SQLiteDatabase: boolean inTransaction()
net.sqlcipher.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
net.sqlcipher.database.SqliteWrapper: net.sqlcipher.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
net.sqlcipher.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
kotlin.reflect.jvm.internal.impl.name.State: kotlin.reflect.jvm.internal.impl.name.State[] values()
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
net.sqlcipher.database.SQLiteDirectCursorDriver: java.lang.String toString()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
net.sqlcipher.database.SQLiteCompiledSql: boolean acquire()
net.sqlcipher.database.SQLiteContentHelper: android.content.res.AssetFileDescriptor getBlobColumnAsAssetFile(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
net.sqlcipher.database.SQLiteDatabase: java.lang.String getPathForLogs()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteTransactionListener: void onBegin()
net.sqlcipher.database.SQLiteDatabase$1: SQLiteDatabase$1()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
com.bumptech.glide.module.LibraryGlideModule: LibraryGlideModule()
net.sqlcipher.database.SQLiteClosable: void releaseReferenceFromContainer()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus: leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus[] values()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
net.sqlcipher.database.SQLiteCursor: int cursorPickFillWindowStartPosition(int,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
leakcanary.AndroidLeakFixes: leakcanary.AndroidLeakFixes valueOf(java.lang.String)
net.sqlcipher.database.SQLiteOpenHelper: java.lang.String getDatabaseName()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
net.sqlcipher.database.SQLiteDatabase: int native_status(int,boolean)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase$2: void run()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.google.gson.internal.bind.DateTypeAdapter$1: DateTypeAdapter$1()
net.sqlcipher.CustomCursorWindowAllocation: long getMaxAllocationSize()
com.google.android.material.chip.Chip: float getChipStrokeWidth()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
net.sqlcipher.database.SQLiteDatabase: void setPageSize(long)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.core.app.ComponentActivity: ComponentActivity()
leakcanary.internal.HeapAnalyzerService: HeapAnalyzerService()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.android.material.internal.VisibilityAwareImageButton: VisibilityAwareImageButton(android.content.Context,android.util.AttributeSet)
leakcanary.internal.InternalLeakCanary: void onDumpHeapReceived(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
net.sqlcipher.R: R()
net.sqlcipher.database.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
net.sqlcipher.database.SQLiteDatabase: SQLiteDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
leakcanary.internal.AndroidXFragmentDestroyWatcher: void invoke(android.app.Activity)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
kotlin.reflect.jvm.internal.impl.load.java.components.TypeUsage: kotlin.reflect.jvm.internal.impl.load.java.components.TypeUsage[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListener(net.sqlcipher.database.SQLiteTransactionListener)
com.example.gamecatalogue.core.data.source.local.room.GameDatabase_Impl: GameDatabase_Impl()
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$EnrichedProjectionKind: kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$EnrichedProjectionKind[] values()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setBadge(com.google.android.material.badge.BadgeDrawable)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTextAppearanceInactive(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
net.sqlcipher.AbstractCursor: int getPosition()
leakcanary.internal.InternalLeakCanary: android.app.Activity getResumedActivity()
net.sqlcipher.CursorWindow: long getLong(int,int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
androidx.core.graphics.drawable.IconCompat: IconCompat()
kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind: kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind[] values()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
net.sqlcipher.database.SQLiteQueryBuilder: void setDistinct(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)
net.sqlcipher.database.SQLiteDatabase$4: void onRollback()
net.sqlcipher.AbstractCursor: boolean isNull(int)
net.sqlcipher.database.SQLiteDebug: SQLiteDebug()
com.google.gson.internal.bind.TypeAdapters$25: TypeAdapters$25()
org.koin.core.definition.Kind: org.koin.core.definition.Kind valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
net.sqlcipher.CursorWindow$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
net.sqlcipher.database.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
leakcanary.internal.AndroidXFragmentDestroyWatcher: AndroidXFragmentDestroyWatcher(leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
net.sqlcipher.database.SQLiteDatabase: void loadLibs(android.content.Context)
net.sqlcipher.database.SQLiteOpenHelper: void onDowngrade(net.sqlcipher.database.SQLiteDatabase,int,int)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.fragment.app.Fragment: Fragment()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor rawQuery(java.lang.String,java.lang.String[])
net.sqlcipher.AbstractWindowedCursor: java.lang.String getString(int)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] values()
net.sqlcipher.BulkCursorNative: BulkCursorNative()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
net.sqlcipher.database.SQLiteMisuseException: SQLiteMisuseException(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
net.sqlcipher.database.SQLiteProgram: void native_finalize()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.lifecycle.ViewModelStore: java.util.Set keys()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
net.sqlcipher.BulkCursorToCursorAdaptor: void deactivate()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.database.SQLiteDatabaseHook: void postKey(net.sqlcipher.database.SQLiteDatabase)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
kotlin.Metadata: java.lang.String pn()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getWindowAnimations()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
net.sqlcipher.IContentObserver$Stub: IContentObserver$Stub()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
net.sqlcipher.database.SQLiteDatabase$CursorFactory: net.sqlcipher.Cursor newCursor(net.sqlcipher.database.SQLiteDatabase,net.sqlcipher.database.SQLiteCursorDriver,java.lang.String,net.sqlcipher.database.SQLiteQuery)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.example.gamecatalogue.presentation.home.HomeFragment: HomeFragment()
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] values()
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.AbstractWindowedCursor: int getType(int)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
net.sqlcipher.database.SQLiteDatabase: void keyDatabase(net.sqlcipher.database.SQLiteDatabaseHook,java.lang.Runnable)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
net.sqlcipher.database.SQLiteOpenHelper: void onUpgrade(net.sqlcipher.database.SQLiteDatabase,int,int)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setCheckable(boolean)
net.sqlcipher.database.SQLiteCursorDriver: void cursorRequeried(android.database.Cursor)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.card.MaterialCardView: float getRadius()
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: SQLiteDatabase$SQLiteDatabaseTransactionType(java.lang.String,int)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTextAppearanceActive(int)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
net.sqlcipher.database.SupportHelper: void setWriteAheadLoggingEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
net.sqlcipher.database.SQLiteDatabase$2: SQLiteDatabase$2(net.sqlcipher.database.SQLiteDatabase,byte[])
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
shark.AndroidResourceIdNames: java.lang.String get(int)
leakcanary.internal.DisplayLeakConnectorView: DisplayLeakConnectorView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteCursor: void access$700(net.sqlcipher.database.SQLiteCursor)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.android.material.chip.Chip: float getIconEndPadding()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
net.sqlcipher.IBulkCursor: void close()
net.sqlcipher.database.SQLiteCursor: boolean supportsUpdates()
net.sqlcipher.CursorWindow: void native_clear()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
net.sqlcipher.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
com.google.android.material.button.MaterialButton: int getTextWidth()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteOpenHelper: void onOpen(net.sqlcipher.database.SQLiteDatabase)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
net.sqlcipher.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: android.content.res.ColorStateList getItemTextColor()
net.sqlcipher.DatabaseUtils: byte[] getCollationKeyInBytes(java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor rawQuery(java.lang.String,java.lang.String[],int,int)
kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind: kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind[] values()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
leakcanary.KeyedWeakReference: void access$setHeapDumpUptimeMillis$cp(long)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.AbstractCursor: void fillWindow(int,android.database.CursorWindow)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String[] computeProjection(java.lang.String[])
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
net.sqlcipher.database.SQLiteProgram: void bindDouble(int,double)
net.sqlcipher.database.SQLiteStatement: SQLiteStatement(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: com.google.android.material.bottomnavigation.BottomNavigationItemView getNewItem()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
kotlin.reflect.jvm.internal.impl.descriptors.Modality: kotlin.reflect.jvm.internal.impl.descriptors.Modality[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
net.sqlcipher.database.SQLiteCompiledSql: void release()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
net.sqlcipher.BulkCursorToCursorAdaptor: net.sqlcipher.IContentObserver getObserver()
net.sqlcipher.database.SQLiteCursor: boolean onMove(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
net.sqlcipher.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemBackgroundRes(int)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType[] values()
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteStatement compileStatement(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getSelectedItemId()
kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType: kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
net.sqlcipher.MatrixCursor: java.lang.Object[] access$000(net.sqlcipher.MatrixCursor)
net.sqlcipher.database.SQLiteFullException: SQLiteFullException()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: android.content.res.ColorStateList getIconTintList()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
net.sqlcipher.AbstractWindowedCursor: byte[] getBlob(int)
net.sqlcipher.CursorWindow: void onAllReferencesReleased()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.database.SQLiteCursor$QueryThread: void run()
net.sqlcipher.database.SQLiteDatabase: void enableSqlProfiling(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
net.sqlcipher.DatabaseUtils$InsertHelper: long insert(android.content.ContentValues)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$LowerCapturedTypePolicy: kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$LowerCapturedTypePolicy valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: void openDatabaseInternal(char[],net.sqlcipher.database.SQLiteDatabaseHook)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.google.android.material.bottomnavigation.BottomNavigationView: BottomNavigationView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
net.sqlcipher.database.SQLiteCursor: boolean deleteRow()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation: kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation[] values()
net.sqlcipher.IBulkCursor: net.sqlcipher.CursorWindow getWindow(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
net.sqlcipher.BuildConfig: BuildConfig()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
leakcanary.internal.InternalLeakCanary: boolean isDebuggableBuild()
kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation: kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation[] values()
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
net.sqlcipher.database.SQLiteConstraintException: SQLiteConstraintException()
net.sqlcipher.database.SQLiteCursor: void setWindow(net.sqlcipher.CursorWindow)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
kotlin.reflect.jvm.internal.impl.load.java.components.TypeUsage: kotlin.reflect.jvm.internal.impl.load.java.components.TypeUsage valueOf(java.lang.String)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
net.sqlcipher.database.SQLiteCompiledSql: void releaseSqlStatement()
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: AndroidSupportFragmentDestroyWatcher(leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
net.sqlcipher.CursorWindow: void setStartPosition(int)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
net.sqlcipher.database.SQLiteCursor: int access$400(net.sqlcipher.database.SQLiteCursor)
shark.AndroidResourceIdNames: AndroidResourceIdNames(int[],java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,java.lang.String)
net.sqlcipher.database.SQLiteOpenHelper: void onConfigure(net.sqlcipher.database.SQLiteDatabase)
net.sqlcipher.database.SQLiteDatabase$3: SQLiteDatabase$3(net.sqlcipher.database.SQLiteDatabase,byte[],char[])
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess: kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int)
kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue: kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue[] values()
net.sqlcipher.AbstractWindowedCursor: AbstractWindowedCursor()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.google.gson.internal.bind.DateTypeAdapter: DateTypeAdapter()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: void enableSqlTracing(java.lang.String)
leakcanary.internal.InternalLeakCanary: leakcanary.internal.InternalLeakCanary$FormFactor getFormFactor()
net.sqlcipher.database.SQLiteProgram: void native_bind_double(int,double)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
net.sqlcipher.BulkCursorNative: android.os.IBinder asBinder()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention valueOf(java.lang.String)
net.sqlcipher.database.SQLiteProgram: void native_bind_long(int,long)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
leakcanary.internal.AndroidHeapDumper: void cancelToast(android.widget.Toast)
androidx.cardview.widget.CardView: float getCardElevation()
net.sqlcipher.database.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
net.sqlcipher.database.SqliteWrapper: SqliteWrapper()
net.sqlcipher.CursorWindow: void finalize()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
net.sqlcipher.AbstractCursor: void deactivateInternal()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
androidx.fragment.app.FragmentActivity: FragmentActivity()
net.sqlcipher.AbstractWindowedCursor: net.sqlcipher.CursorWindow getWindow()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.google.android.material.card.MaterialCardView: float getProgress()
net.sqlcipher.database.SQLiteProgram: java.lang.String getSqlString()
net.sqlcipher.database.SQLiteDoneException: SQLiteDoneException(java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
net.sqlcipher.database.SupportHelper$1: void onDowngrade(net.sqlcipher.database.SQLiteDatabase,int,int)
net.sqlcipher.DatabaseUtils: long longForQuery(net.sqlcipher.database.SQLiteStatement,java.lang.String[])
net.sqlcipher.IBulkCursor: boolean deleteRow(int)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier valueOf(java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemHorizontalTranslationEnabled(boolean)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality[] values()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level[] values()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setItemBackground(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteCursorDriver: void cursorDeactivated()
net.sqlcipher.BulkCursorToCursorAdaptor: BulkCursorToCursorAdaptor()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
net.sqlcipher.AbstractCursor: void deactivate()
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
net.sqlcipher.MatrixCursor: MatrixCursor(java.lang.String[])
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract valueOf(java.lang.String)
net.sqlcipher.MatrixCursor: int getCount()
net.sqlcipher.database.SQLiteClosable: java.lang.String getObjInfo()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
net.sqlcipher.database.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])
net.sqlcipher.CursorWrapper: net.sqlcipher.Cursor getWrappedCursor()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
net.sqlcipher.AbstractCursor: boolean update(int,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
net.sqlcipher.DatabaseUtils: void cursorLongToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.Object[])
net.sqlcipher.database.SQLiteDatabase: java.lang.String getPath()
net.sqlcipher.MatrixCursor: net.sqlcipher.MatrixCursor$RowBuilder newRow()
net.sqlcipher.DatabaseUtils: void bindObjectToProgram(net.sqlcipher.database.SQLiteProgram,int,java.lang.Object)
shark.LeakTraceReference$ReferenceType: shark.LeakTraceReference$ReferenceType[] values()
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: leakcanary.ObjectWatcher access$getObjectWatcher$p(leakcanary.internal.AndroidSupportFragmentDestroyWatcher)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation: kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue[] values()
shark.AndroidObjectInspectors: shark.AndroidObjectInspectors valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
shark.AndroidReferenceMatchers: shark.AndroidReferenceMatchers[] values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.google.android.material.bottomnavigation.BottomNavigationView: int getLabelVisibilityMode()
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
net.sqlcipher.CursorWindow: void setCursorWindowAllocation(net.sqlcipher.CursorWindowAllocation)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
kotlin.reflect.jvm.internal.impl.descriptors.ClassKind: kotlin.reflect.jvm.internal.impl.descriptors.ClassKind[] values()
net.sqlcipher.CursorWindow: int getRequiredPosition()
kotlin.reflect.jvm.internal.impl.builtins.UnsignedType: kotlin.reflect.jvm.internal.impl.builtins.UnsignedType valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDebug: long getHeapSize()
leakcanary.internal.AndroidHeapDumper: java.io.File dumpHeap()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
net.sqlcipher.BulkCursorNative: net.sqlcipher.IBulkCursor asInterface(android.os.IBinder)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
net.sqlcipher.BulkCursorToCursorAdaptor: boolean commitUpdates(java.util.Map)
net.sqlcipher.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.io.File,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook)
kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind: kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.RowAllocationException: RowAllocationException(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
net.sqlcipher.database.SQLiteCursor: int access$500(net.sqlcipher.database.SQLiteCursor)
net.sqlcipher.CursorWindow: byte[] getBlob(int,int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
net.sqlcipher.CursorWindow: boolean isNull(int,int)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
net.sqlcipher.database.SQLiteDatabase: java.util.ArrayList getActiveDatabases()
net.sqlcipher.database.SQLiteDatabase: long getPageSize()
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
net.sqlcipher.IContentObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
net.sqlcipher.database.SQLiteProgram: void bindBlob(int,byte[])
com.google.android.material.bottomnavigation.BottomNavigationMenuView: android.graphics.drawable.Drawable getItemBackground()
net.sqlcipher.database.SQLiteStatement: void native_execute()
net.sqlcipher.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
net.sqlcipher.database.SQLiteClosable: SQLiteClosable()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.gson.internal.bind.TypeAdapters$20: TypeAdapters$20()
kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result: kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result valueOf(java.lang.String)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
net.sqlcipher.database.SQLiteProgram: void native_clear_bindings()
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.google.android.material.bottomnavigation.BottomNavigationView: android.content.res.ColorStateList getItemRippleColor()
net.sqlcipher.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)
net.sqlcipher.AbstractWindowedCursor: boolean isLong(int)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
net.sqlcipher.database.SQLiteDatabase: long setMaximumSize(long)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.example.gamecatalogue.core.data.source.local.room.GameDatabase: GameDatabase()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
net.sqlcipher.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo: kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)
net.sqlcipher.database.SQLiteDatabase$4: void onCommit()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.google.gson.internal.bind.TypeAdapters$19: TypeAdapters$19()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
net.sqlcipher.CursorWindow: double getDouble(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
net.sqlcipher.BulkCursorProxy: int count()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
net.sqlcipher.IBulkCursor: boolean updateRows(java.util.Map)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
net.sqlcipher.AbstractCursor: android.database.DataSetObservable getDataSetObservable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.android.material.bottomnavigation.BottomNavigationView: android.content.res.ColorStateList getItemTextColor()
net.sqlcipher.database.SQLiteProgram: SQLiteProgram(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
leakcanary.internal.InternalLeakCanary: boolean isRunningTests()
net.sqlcipher.MatrixCursor$RowBuilder: net.sqlcipher.MatrixCursor$RowBuilder add(java.lang.Object)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor queryWithFactory(net.sqlcipher.database.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
leakcanary.internal.AndroidHeapDumper: AndroidHeapDumper(android.content.Context,leakcanary.internal.LeakDirectoryProvider)
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result valueOf(java.lang.String)
shark.LeakTrace$GcRootType: shark.LeakTrace$GcRootType[] values()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
net.sqlcipher.AbstractWindowedCursor: boolean hasWindow()
com.google.gson.internal.bind.TypeAdapters$23: TypeAdapters$23()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: float getChipMinHeight()
net.sqlcipher.database.SQLiteCompiledSql: SQLiteCompiledSql(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
net.sqlcipher.database.SQLiteDatabase: int getMaxSqlCacheSize()
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
net.sqlcipher.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
net.sqlcipher.AbstractCursor: boolean updateBlob(int,byte[])
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
shark.AndroidResourceIdNames: void access$setHolderField$cp(shark.AndroidResourceIdNames)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.google.android.material.bottomnavigation.BottomNavigationItemView: int getItemVisiblePosition()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
net.sqlcipher.database.SQLiteDatabase$4: SQLiteDatabase$4(net.sqlcipher.database.SQLiteDatabase,android.database.sqlite.SQLiteTransactionListener)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
net.sqlcipher.CursorWindow: int getType_native(int,int)
net.sqlcipher.InvalidRowColumnException: InvalidRowColumnException()
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.CursorWindow: void writeToParcel(android.os.Parcel,int)
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
net.sqlcipher.DatabaseUtils: int getTypeOfObject(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
net.sqlcipher.database.SQLiteOpenHelper: void onCreate(net.sqlcipher.database.SQLiteDatabase)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
net.sqlcipher.BulkCursorProxy: int requery(net.sqlcipher.IContentObserver,net.sqlcipher.CursorWindow)
net.sqlcipher.database.SQLiteQueryBuilder: void setTables(java.lang.String)
net.sqlcipher.database.SQLiteCursor: int getColumnIndex(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.io.File,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.BulkCursorToCursorAdaptor: void copyStringToBuffer(int,android.database.CharArrayBuffer)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: void execSQL(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
net.sqlcipher.database.SQLiteDiskIOException: SQLiteDiskIOException(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.google.android.material.internal.FlowLayout: int getRowCount()
net.sqlcipher.database.SQLiteDatabase: boolean isDatabaseIntegrityOk()
shark.LeakTraceObject$ObjectType: shark.LeakTraceObject$ObjectType valueOf(java.lang.String)
net.sqlcipher.CursorIndexOutOfBoundsException: CursorIndexOutOfBoundsException(int,int)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
net.sqlcipher.DatabaseUtils: void dumpCursor(net.sqlcipher.Cursor,java.lang.StringBuilder)
net.sqlcipher.database.SqliteWrapper: boolean requery(android.content.Context,android.database.Cursor)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.google.gson.internal.bind.TypeAdapters$17: TypeAdapters$17()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.lifecycle.ViewModelStore: void clear()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
net.sqlcipher.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind: kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind valueOf(java.lang.String)
net.sqlcipher.database.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
net.sqlcipher.database.SQLiteDatabase: void addSQLiteClosable(net.sqlcipher.database.SQLiteClosable)
leakcanary.internal.InternalLeakCanary: void addDynamicShortcut(android.app.Application)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
net.sqlcipher.database.SQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteQuery: void bindLong(int,long)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
net.sqlcipher.AbstractCursor: void checkPosition()
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
net.sqlcipher.DatabaseUtils$InsertHelper: int getColumnIndex(java.lang.String)
net.sqlcipher.database.SQLiteOpenHelper: SQLiteOpenHelper(android.content.Context,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
net.sqlcipher.CursorWindow: boolean isString_native(int,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.constraintlayout.widget.Barrier: void setMargin(int)
kotlin.reflect.jvm.internal.impl.utils.ReportLevel: kotlin.reflect.jvm.internal.impl.utils.ReportLevel[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.gson.internal.bind.TypeAdapters$1: TypeAdapters$1()
net.sqlcipher.IContentObserver$Stub$Proxy: android.os.IBinder asBinder()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
net.sqlcipher.AbstractCursor: boolean updateDouble(int,double)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.material.chip.Chip: void setLines(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection[] values()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
net.sqlcipher.database.SQLiteDatabase: void close()
leakcanary.internal.PlumberInstaller: PlumberInstaller()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
net.sqlcipher.database.SQLiteQuery: void bindNull(int)
net.sqlcipher.database.SQLiteDatabase: void setMaxSqlCacheSize(int)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
net.sqlcipher.AbstractWindowedCursor: int getInt(int)
com.google.android.material.chip.Chip: void setGravity(int)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getTextStartPadding()
net.sqlcipher.database.SQLiteDatabase: void dbopen(java.lang.String,int)
net.sqlcipher.database.SQLiteDatabase: boolean isDbLockedByCurrentThread()
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteDatabase getDatabase()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
leakcanary.KeyedWeakReference: long access$getHeapDumpUptimeMillis$cp()
kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription: kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
net.sqlcipher.CursorWindow: net.sqlcipher.CursorWindow newFromParcel(android.os.Parcel)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention[] values()
net.sqlcipher.DatabaseUtils: void cursorFillWindow(net.sqlcipher.Cursor,int,android.database.CursorWindow)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.material.bottomnavigation.BottomNavigationView: int getItemIconSize()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
net.sqlcipher.AbstractWindowedCursor: boolean isNull(int)
net.sqlcipher.database.SQLiteDatabase: long getMaximumSize()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
net.sqlcipher.AbstractCursor: int getType(int)
com.google.android.material.button.MaterialButton: void setIconSize(int)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
net.sqlcipher.database.SQLiteDatabase: void setLocale(java.util.Locale)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setProgress(float)
net.sqlcipher.database.SQLiteDatabase: boolean yieldIfContendedHelper(boolean,long)
com.google.android.material.button.MaterialButton: int getCornerRadius()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection valueOf(java.lang.String)
net.sqlcipher.MatrixCursor: java.lang.String[] getColumnNames()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemTextColor(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$202(net.sqlcipher.database.SQLiteCursor,java.util.concurrent.locks.ReentrantLock)
net.sqlcipher.database.SQLiteDatabase: void loadICUData(android.content.Context,java.io.File)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$PropertyRelatedElement: kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$PropertyRelatedElement[] values()
androidx.cardview.widget.CardView: void setCardElevation(float)
net.sqlcipher.database.SQLiteQuery: java.lang.String columnNameLocked(int)
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
net.sqlcipher.AbstractWindowedCursor: short getShort(int)
net.sqlcipher.CursorWindow: boolean setNumColumns(int)
kotlin.reflect.jvm.internal.impl.descriptors.ClassKind: kotlin.reflect.jvm.internal.impl.descriptors.ClassKind valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTitle(java.lang.CharSequence)
leakcanary.internal.InternalLeakCanary: leakcanary.internal.OnRetainInstanceListener getOnRetainInstanceListener()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,long)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
net.sqlcipher.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel,java.lang.String,int)
net.sqlcipher.MatrixCursor: void addRow(java.lang.Iterable)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
net.sqlcipher.CursorWindow: net.sqlcipher.CursorWindowAllocation getCursorWindowAllocation()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
net.sqlcipher.IBulkCursor: int requery(net.sqlcipher.IContentObserver,net.sqlcipher.CursorWindow)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
kotlin.Metadata: java.lang.String xs()
net.sqlcipher.IContentObserver$Stub$Proxy: IContentObserver$Stub$Proxy(android.os.IBinder)
kotlin.reflect.jvm.internal.impl.types.model.CaptureStatus: kotlin.reflect.jvm.internal.impl.types.model.CaptureStatus[] values()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
net.sqlcipher.database.SQLiteStatement: java.lang.String simpleQueryForString()
net.sqlcipher.CursorWindow: int getStartPosition()
net.sqlcipher.database.SQLiteQueryBuilder: void appendClauseEscapeClause(java.lang.StringBuilder,java.lang.String,java.lang.String)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
net.sqlcipher.DatabaseUtils: void dumpCursor(net.sqlcipher.Cursor,java.io.PrintStream)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.gson.internal.bind.TypeAdapters$18: TypeAdapters$18()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
kotlin.reflect.jvm.internal.impl.builtins.UnsignedType: kotlin.reflect.jvm.internal.impl.builtins.UnsignedType[] values()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setLabelVisibilityMode(int)
net.sqlcipher.DatabaseUtils: void cursorDoubleToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
net.sqlcipher.database.SQLiteDebug: void getHeapDirtyPages(int[])
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
net.sqlcipher.MatrixCursor: void addRow(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
net.sqlcipher.CursorWindow: boolean putBlob_native(byte[],int,int)
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
net.sqlcipher.BulkCursorProxy: void deactivate()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
net.sqlcipher.CursorWindow: boolean isFloat(int,int)
net.sqlcipher.IBulkCursor: android.os.Bundle respond(android.os.Bundle)
net.sqlcipher.database.SQLiteTransactionListener: void onRollback()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
leakcanary.internal.navigation.NavigatingActivity: NavigatingActivity()
kotlin.reflect.jvm.internal.impl.utils.ReportLevel: kotlin.reflect.jvm.internal.impl.utils.ReportLevel valueOf(java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
net.sqlcipher.database.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
net.sqlcipher.DatabaseUtils$InsertHelper: void bindNull(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind: kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind valueOf(java.lang.String)
net.sqlcipher.database.SQLiteOpenHelper: void close()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind[] values()
net.sqlcipher.AbstractCursor: boolean onMove(int,int)
net.sqlcipher.database.SQLiteDatabase: void beginTransactionNonExclusive()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteStatement: long simpleQueryForLong()
com.google.android.material.button.MaterialButton: void setElevation(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
net.sqlcipher.database.SupportFactory: SupportFactory(byte[],net.sqlcipher.database.SQLiteDatabaseHook)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
net.sqlcipher.database.SQLiteDatabase: SQLiteDatabase(java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.DatabaseErrorHandler)
leakcanary.internal.InternalLeakCanary: void onObjectRetained()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
net.sqlcipher.DatabaseUtils: long queryNumEntries(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
net.sqlcipher.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
net.sqlcipher.CursorWindow: int getType(int,int)
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String getTables()
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
leakcanary.KeyedWeakReference: void setHeapDumpUptimeMillis(long)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemBackgroundResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
net.sqlcipher.database.SQLiteDatabase: void onAllReferencesReleased()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
net.sqlcipher.AbstractCursor: void close()
net.sqlcipher.CursorWindow: boolean allocRow_native()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
kotlin.reflect.KVariance: kotlin.reflect.KVariance valueOf(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
net.sqlcipher.database.SupportHelper$1: void onOpen(net.sqlcipher.database.SQLiteDatabase)
net.sqlcipher.BulkCursorToCursorAdaptor: int findRowIdColumnIndex(java.lang.String[])
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
leakcanary.internal.InternalLeakCanary: void version$annotations()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind[] values()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor rawQuery(java.lang.String,java.lang.Object[])
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
net.sqlcipher.AbstractCursor: byte[] getBlob(int)
net.sqlcipher.AbstractCursor: double getDouble(int)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
leakcanary.internal.InternalLeakCanary: <clinit>()
net.sqlcipher.AbstractCursor: java.lang.String[] getColumnNames()
net.sqlcipher.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteDatabase: android.database.Cursor query(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
net.sqlcipher.CrossProcessCursorWrapper: CrossProcessCursorWrapper(net.sqlcipher.Cursor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
leakcanary.internal.RowElementLayout: RowElementLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteQuery: int columnCountLocked()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
net.sqlcipher.AbstractCursor: boolean getWantsAllOnMoveCalls()
net.sqlcipher.AbstractCursor: boolean updateShort(int,short)
net.sqlcipher.database.SQLiteDatabase: int releaseMemory()
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
androidx.cardview.widget.CardView: float getRadius()
leakcanary.internal.AndroidXFragmentDestroyWatcher: leakcanary.ObjectWatcher access$getObjectWatcher$p(leakcanary.internal.AndroidXFragmentDestroyWatcher)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
net.sqlcipher.R$string: R$string()
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.MatrixCursor: long getLong(int)
com.google.gson.internal.bind.TypeAdapters$3: TypeAdapters$3()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
net.sqlcipher.database.SQLiteCompiledSql: void native_finalize()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.database.SQLiteClosable: void onAllReferencesReleasedFromContainer()
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
net.sqlcipher.database.SQLiteDatabase$5: void onBegin()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setShifting(boolean)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier[] values()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
leakcanary.internal.DisplayLeakConnectorView$Type: leakcanary.internal.DisplayLeakConnectorView$Type[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
net.sqlcipher.database.SQLiteDatabase: long getPragmaVal(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
net.sqlcipher.database.SQLiteProgram: void onAllReferencesReleased()
net.sqlcipher.BulkCursorToCursorAdaptor: void set(net.sqlcipher.IBulkCursor,int,int)
net.sqlcipher.AbstractCursor: short getShort(int)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
net.sqlcipher.IBulkCursor: void onMove(int)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$Kind: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$Kind valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
net.sqlcipher.database.SQLiteDatabase$LibraryLoader: void loadLibraries(java.lang.String[])
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
net.sqlcipher.database.SQLiteQueryBuilder: SQLiteQueryBuilder()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.google.gson.internal.bind.TypeAdapters$7: TypeAdapters$7()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.google.android.material.chip.Chip: void setChipIconSize(float)
net.sqlcipher.AbstractCursor: void abortUpdates()
net.sqlcipher.database.SQLiteDatabase: void setTransactionSuccessful()
net.sqlcipher.AbstractCursor: float getFloat(int)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.bottomnavigation.BottomNavigationView: int getItemTextAppearanceActive()
net.sqlcipher.database.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy valueOf(java.lang.String)
net.sqlcipher.database.SupportHelper: void close()
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.google.gson.internal.bind.TypeAdapters$15: TypeAdapters$15()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
net.sqlcipher.CursorWindow: byte[] getBlob_native(int,int)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setIconTintList(android.content.res.ColorStateList)
net.sqlcipher.BulkCursorProxy: boolean deleteRow(int)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
net.sqlcipher.AbstractWindowedCursor: android.database.CursorWindow getWindow()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
net.sqlcipher.DatabaseUtils: void cursorIntToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
kotlin.reflect.jvm.internal.impl.types.Variance: kotlin.reflect.jvm.internal.impl.types.Variance[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: android.util.SparseArray getBadgeDrawables()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
net.sqlcipher.database.SQLiteDatabase: void endTransaction()
com.google.gson.internal.bind.TypeAdapters$21: TypeAdapters$21()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
net.sqlcipher.AbstractCursor: int getColumnCount()
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.google.gson.internal.bind.TypeAdapters$13: TypeAdapters$13()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
net.sqlcipher.database.SQLiteCursor: int access$300(net.sqlcipher.database.SQLiteCursor)
net.sqlcipher.database.SupportFactory: SupportFactory(byte[],net.sqlcipher.database.SQLiteDatabaseHook,boolean)
net.sqlcipher.database.SqliteWrapper: boolean isLowMemory(net.sqlcipher.database.SQLiteException)
kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind: kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind[] values()
com.google.android.material.button.MaterialButton: int getInsetTop()
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
androidx.room.RoomDatabase: RoomDatabase()
net.sqlcipher.database.SQLiteDatabase: boolean isDbLockedByOtherThreads()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemIconSizeRes(int)
net.sqlcipher.database.SQLiteProgram: void native_bind_blob(int,byte[])
net.sqlcipher.BulkCursorProxy: void close()
net.sqlcipher.database.SQLiteCursor: int access$502(net.sqlcipher.database.SQLiteCursor,int)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.CursorWindow: int describeContents()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
net.sqlcipher.IContentObserver$Stub: net.sqlcipher.IContentObserver asInterface(android.os.IBinder)
androidx.appcompat.widget.Toolbar: void setTitle(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase create(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.database.SQLiteDatabaseCorruptException: SQLiteDatabaseCorruptException(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance[] values()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
net.sqlcipher.DatabaseUtils: int getKeyLen(byte[])
