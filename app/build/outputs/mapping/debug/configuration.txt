# The proguard configuration file for the following section is C:\Users\rama_\Documents\Kuliah\CERC\GameCatalogue\app\build\intermediates\proguard-files\proguard-android-optimize.txt-4.2.1
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
# Adding optimization introduces certain risks, since for example not all optimizations performed by
# ProGuard works on all versions of Dalvik.  The following flags turn off various optimizations
# known to have issues, but the list may not be complete or up to date. (The "arithmetic"
# optimization can be used if you are only targeting Android 2.0 or later.)  Make sure you test
# thoroughly if you go this route.
-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*
-optimizationpasses 5
-allowaccessmodification

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

# Preserve some attributes that may be required for reflection.
-keepattributes *Annotation*,Signature,InnerClasses,EnclosingMethod

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# This class is deprecated, but remains for backward compatibility.
-dontwarn android.util.FloatMath

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep
-keep class androidx.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from C:\Users\rama_\Documents\Kuliah\CERC\GameCatalogue\app\build\intermediates\proguard-files\proguard-android-optimize.txt-4.2.1
# The proguard configuration file for the following section is C:\Users\rama_\Documents\Kuliah\CERC\GameCatalogue\app\proguard-rules.pro
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile
# End of content from C:\Users\rama_\Documents\Kuliah\CERC\GameCatalogue\app\proguard-rules.pro
# The proguard configuration file for the following section is C:\Users\rama_\Documents\Kuliah\CERC\GameCatalogue\app\build\intermediates\merged_aapt_proguard_file\debug\merged_aapt_rules.txt
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
-keep class androidx.room.MultiInstanceInvalidationService { <init>(); }
-keep class com.example.gamecatalogue.MainActivity { <init>(); }
-keep class com.example.gamecatalogue.MyApplication { <init>(); }
-keep class com.example.gamecatalogue.favorite.FavoriteActivity { <init>(); }
-keep class com.example.gamecatalogue.presentation.detail.DetailActivity { <init>(); }
-keep class leakcanary.internal.AppWatcherInstaller$MainProcess { <init>(); }
-keep class leakcanary.internal.HeapAnalyzerService { <init>(); }
-keep class leakcanary.internal.LeakCanaryFileProvider { <init>(); }
-keep class leakcanary.internal.NotificationReceiver { <init>(); }
-keep class leakcanary.internal.PlumberInstaller { <init>(); }
-keep class leakcanary.internal.RequestStoragePermissionActivity { <init>(); }
-keep class leakcanary.internal.activity.LeakActivity { <init>(); }
-keep class android.widget.Space { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContainer { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.DialogTitle { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.Toolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ViewStubCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.cardview.widget.CardView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.Barrier { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.Guideline { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.core.widget.NestedScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.fragment.app.FragmentContainerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.navigation.fragment.NavHostFragment { <init>(); }

-keep class androidx.recyclerview.widget.RecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.example.gamecatalogue.presentation.favorite.FavoriteFragment { <init>(...); }

-keep class com.example.gamecatalogue.presentation.home.HomeFragment { <init>(...); }

-keep class com.example.gamecatalogue.presentation.profile.ProfileFragment { <init>(...); }

-keep class com.google.android.material.appbar.MaterialToolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.bottomnavigation.BottomNavigationView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButtonToggleGroup { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.chip.Chip { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.chip.ChipGroup { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.datepicker.MaterialCalendarGridView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.floatingactionbutton.FloatingActionButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.BaselineLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.CheckableImageButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.Snackbar$SnackbarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.SnackbarContentLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textview.MaterialTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ChipTextInputComboView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockFaceView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockHandView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.TimePickerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class leakcanary.internal.DisplayLeakConnectorView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class leakcanary.internal.RowElementLayout { <init>(android.content.Context, android.util.AttributeSet); }


-keep class com.example.gamecatalogue.favorite.FavoriteActivity { <init>(); }
-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.recyclerview.widget.RecyclerView { <init>(android.content.Context, android.util.AttributeSet); }



# End of content from C:\Users\rama_\Documents\Kuliah\CERC\GameCatalogue\app\build\intermediates\merged_aapt_proguard_file\debug\merged_aapt_rules.txt
# The proguard configuration file for the following section is C:\Users\rama_\Documents\Kuliah\CERC\GameCatalogue\core\build\intermediates\consumer_proguard_dir\debug\lib0\proguard.txt
##---------------Begin: proguard configuration for SQLCipher  ----------
-keep,includedescriptorclasses class net.sqlcipher.** { *; }
-keep,includedescriptorclasses interface net.sqlcipher.** { *; }
 
 
##---------------Begin: proguard configuration for Gson ----------
# Gson uses generic type information stored in a class file when working with fields. Proguard
# removes such information by default, so configure it to keep all of it.
-keepattributes Signature
 
# For using GSON @Expose annotation
-keepattributes *Annotation*
 
# Gson specific classes
-dontwarn sun.misc.**
#-keep class com.google.gson.stream.** { *; }
 
# Application classes that will be serialized/deserialized over Gson
-keep class com.google.gson.examples.android.model.** { <fields>; }
 
# Prevent proguard from stripping interface information from TypeAdapter, TypeAdapterFactory,
# JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)
-keep class * extends com.google.gson.TypeAdapter
-keep class * implements com.google.gson.TypeAdapterFactory
-keep class * implements com.google.gson.JsonSerializer
-keep class * implements com.google.gson.JsonDeserializer
 
# Prevent R8 from leaving Data object members always null
-keepclassmembers,allowobfuscation class * {
@com.google.gson.annotations.SerializedName <fields>;
}
 
 
##---------------Begin: proguard configuration for Retrofit ----------
# Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and
# EnclosingMethod is required to use InnerClasses.
-keepattributes Signature, InnerClasses, EnclosingMethod
 
# Retrofit does reflection on method and parameter annotations.
-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations
 
# Retain service method parameters when optimizing.
-keepclassmembers,allowshrinking,allowobfuscation interface * {
@retrofit2.http.* <methods>;
}
 
# Ignore annotation used for build tooling.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
 
# Ignore JSR 305 annotations for embedding nullability information.
-dontwarn javax.annotation.**
 
# Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.
-dontwarn kotlin.Unit
 
# Top-level functions that can only be used by Kotlin.
-dontwarn retrofit2.KotlinExtensions
-dontwarn retrofit2.KotlinExtensions$*
 
# With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy
# and replaces all potential values with null. Explicitly keeping the interfaces prevents this.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface <1>
 
-dontwarn kotlinx.**
 
 
##---------------Begin: proguard configuration for Glide ----------
-keep public class * implements com.bumptech.glide.module.GlideModule
-keep class * extends com.bumptech.glide.module.AppGlideModule {
<init>(...);
}
-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {
**[] $VALUES;
public *;
}
-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {
*** rewind();
}
# End of content from C:\Users\rama_\Documents\Kuliah\CERC\GameCatalogue\core\build\intermediates\consumer_proguard_dir\debug\lib0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\2e82dcf8a44dbf4ccba753f3743d2067\navigation-common-ktx-2.3.5\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NavArgsLazy creates NavArgs instances using reflection
-if public class ** implements androidx.navigation.NavArgs
-keepclassmembers public class <1> {
    ** fromBundle(android.os.Bundle);
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\2e82dcf8a44dbf4ccba753f3743d2067\navigation-common-ktx-2.3.5\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\d24563c243b10f9153f3234e55732473\leakcanary-android-core-2.4\proguard.txt
# Loaded via reflection & referenced by shark.AndroidReferenceMatchers.LEAK_CANARY_INTERNAL
-keep class leakcanary.internal.InternalLeakCanary { *; }
# Referenced by shark.AndroidReferenceMatchers.LEAK_CANARY_HEAP_DUMPER
-keep class leakcanary.internal.AndroidHeapDumper { *; }
# Marshmallow removed Notification.setLatestEventInfo()
-dontwarn android.app.Notification

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\d24563c243b10f9153f3234e55732473\leakcanary-android-core-2.4\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\805076aabf150a3ec2aa4f70fe6e75c8\rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

-keep class kotlinx.coroutines.android.AndroidDispatcherFactory {*;}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}
# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\805076aabf150a3ec2aa4f70fe6e75c8\rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\960e09bfb4e47e76f6e3ab02cb03fcf1\rules\lib\META-INF\proguard\shark.pro
# Used during heap analysis to find resource id names
-keep class shark.AndroidResourceIdNames { *; }

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\960e09bfb4e47e76f6e3ab02cb03fcf1\rules\lib\META-INF\proguard\shark.pro
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\01c1638e01fc271a53cdd322ed84c8c0\leakcanary-object-watcher-android-androidx-2.4\proguard.txt
# AndroidXFragmentDestroyWatcher is loaded via reflection
-keep class leakcanary.internal.AndroidXFragmentDestroyWatcher { *; }
# ViewModelClearedWatcher reaches into ViewModelStore using reflection.
-keep class androidx.lifecycle.ViewModelStore { *; }

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\01c1638e01fc271a53cdd322ed84c8c0\leakcanary-object-watcher-android-androidx-2.4\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\39a0fe76949df54a43f8d09ed59e03a9\leakcanary-object-watcher-android-support-fragments-2.4\proguard.txt
# AndroidSupportFragmentDestroyWatcher is loaded via reflection
-keep class leakcanary.internal.AndroidSupportFragmentDestroyWatcher { *; }

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\39a0fe76949df54a43f8d09ed59e03a9\leakcanary-object-watcher-android-support-fragments-2.4\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\053d516b8fc99ac13fc943bfa87b71cc\leakcanary-object-watcher-android-2.4\proguard.txt
# A ContentProvider that gets created by Android on startup
-keep class leakcanary.internal.AppWatcherInstaller { <init>(); }
# KeyedWeakReference is looked up in the hprof file
-keep class leakcanary.KeyedWeakReference { *; }

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\053d516b8fc99ac13fc943bfa87b71cc\leakcanary-object-watcher-android-2.4\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\f4fb4c23faf188ff26bec01a836bbda0\plumber-android-2.4\proguard.txt
# A ContentProvider that gets created by Android on startup
-keep class leakcanary.internal.PlumberInstaller { <init>(); }
# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\f4fb4c23faf188ff26bec01a836bbda0\plumber-android-2.4\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\3e6661e742abce7a4367a1e8bbc022f7\rules\lib\META-INF\proguard\coroutines.pro
# ServiceLoader support
-keepnames class kotlinx.coroutines.internal.MainDispatcherFactory {}
-keepnames class kotlinx.coroutines.CoroutineExceptionHandler {}

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembernames class kotlinx.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembernames class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\3e6661e742abce7a4367a1e8bbc022f7\rules\lib\META-INF\proguard\coroutines.pro
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\8cb14a4b9dc03043c6143735dadcacb0\rules\lib\META-INF\com.android.tools\r8-from-1.6.0\kotlin-reflect.pro
# When editing this file, update the following files as well:
# - META-INF/com.android.tools/proguard/kotlin-reflect.pro
# - META-INF/com.android.tools/r8-upto-1.6.0/kotlin-reflect.pro
# - META-INF/proguard/kotlin-reflect.pro
# Keep Metadata annotations so they can be parsed at runtime.
-keep class kotlin.Metadata { *; }

# Keep generic signatures and annotations at runtime.
# R8 requires InnerClasses and EnclosingMethod if you keepattributes Signature.
-keepattributes InnerClasses,Signature,RuntimeVisible*Annotations,EnclosingMethod

# Don't note on API calls from different JVM versions as they're gated properly at runtime.
-dontnote kotlin.internal.PlatformImplementationsKt

# Don't note on internal APIs, as there is some class relocating that shrinkers may unnecessarily find suspicious.
-dontwarn kotlin.reflect.jvm.internal.**
# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\8cb14a4b9dc03043c6143735dadcacb0\rules\lib\META-INF\com.android.tools\r8-from-1.6.0\kotlin-reflect.pro
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\417e23f6105cfd215c8b65b84a980814\rules\lib\META-INF\proguard\retrofit2.pro
# Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and
# EnclosingMethod is required to use InnerClasses.
-keepattributes Signature, InnerClasses, EnclosingMethod

# Retrofit does reflection on method and parameter annotations.
-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations

# Retain service method parameters when optimizing.
-keepclassmembers,allowshrinking,allowobfuscation interface * {
    @retrofit2.http.* <methods>;
}

# Ignore annotation used for build tooling.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# Ignore JSR 305 annotations for embedding nullability information.
-dontwarn javax.annotation.**

# Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.
-dontwarn kotlin.Unit

# Top-level functions that can only be used by Kotlin.
-dontwarn retrofit2.KotlinExtensions
-dontwarn retrofit2.KotlinExtensions$*

# With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy
# and replaces all potential values with null. Explicitly keeping the interfaces prevents this.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface <1>

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\417e23f6105cfd215c8b65b84a980814\rules\lib\META-INF\proguard\retrofit2.pro
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\495a900545fda4ab4d89120b9d80e04e\rules\lib\META-INF\proguard\okhttp3.pro
# JSR 305 annotations are for embedding nullability information.
-dontwarn javax.annotation.**

# A resource is loaded with a relative path so the package of this class must be preserved.
-keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase

# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# OkHttp platform used only on JVM and when Conscrypt dependency is available.
-dontwarn okhttp3.internal.platform.ConscryptPlatform

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\495a900545fda4ab4d89120b9d80e04e\rules\lib\META-INF\proguard\okhttp3.pro
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\1889211836443b76fed9ff56b57bae56\rules\lib\META-INF\proguard\okio.pro
# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\1889211836443b76fed9ff56b57bae56\rules\lib\META-INF\proguard\okio.pro
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\00215220249970aa0e2b31d29115a82f\navigation-ui-2.3.5\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# setProgress is called via an ObjectAnimator in AbstractAppBarOnDestinationChangedListener
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
    void setProgress(float);
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\00215220249970aa0e2b31d29115a82f\navigation-ui-2.3.5\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\b8721f2d746093988e747bf0dc3e8f30\material-1.3.0\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\b8721f2d746093988e747bf0dc3e8f30\material-1.3.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\a0c6fc41702bd7dbd95c65a4f4d7cfa8\appcompat-1.3.0\proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\a0c6fc41702bd7dbd95c65a4f4d7cfa8\appcompat-1.3.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\f80c4bf98eb6762a98de78b05cfeb989\glide-4.12.0\proguard.txt
-keep public class * implements com.bumptech.glide.module.GlideModule
-keep class * extends com.bumptech.glide.module.AppGlideModule {
 <init>(...);
}
-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}
-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {
  *** rewind();
}

# Uncomment for DexGuard only
#-keepresourcexmlelements manifest/application/meta-data@value=GlideModule

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\f80c4bf98eb6762a98de78b05cfeb989\glide-4.12.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\02df51ec2503c6c142e07bf215f12540\vectordrawable-animated-1.1.0\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\02df51ec2503c6c142e07bf215f12540\vectordrawable-animated-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\c61287afbd6b4e61b2f5c8f2ff0d39b6\recyclerview-1.2.0\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\c61287afbd6b4e61b2f5c8f2ff0d39b6\recyclerview-1.2.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\e52100aea45ea449724ae082f7823544\fragment-1.3.4\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\e52100aea45ea449724ae082f7823544\fragment-1.3.4\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\0ba253e7c4ff6345db2fd19941bd1cfb\coordinatorlayout-1.1.0\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\0ba253e7c4ff6345db2fd19941bd1cfb\coordinatorlayout-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\c5ff3aaa4d3378ae6e3f40bd372583a6\media-1.0.0\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Prevent Parcelable objects from being removed or renamed.
-keep class android.support.v4.media.** implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
}

# Prevent Parcelable objects from being removed or renamed.
-keep class androidx.media.** implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
}
# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\c5ff3aaa4d3378ae6e3f40bd372583a6\media-1.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\e5553b6bac2899552f159029a31c0ee2\transition-1.3.0\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\e5553b6bac2899552f159029a31c0ee2\transition-1.3.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\967826c52c5558ea22060f7728ba7d3b\core-1.5.0\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\967826c52c5558ea22060f7728ba7d3b\core-1.5.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\a650477e21556eb951e2ebfabac8975b\lifecycle-viewmodel-savedstate-2.3.1\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\a650477e21556eb951e2ebfabac8975b\lifecycle-viewmodel-savedstate-2.3.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\69ec76d61e284b02a89b85d4e831374e\savedstate-1.1.0\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\69ec76d61e284b02a89b85d4e831374e\savedstate-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\7a90a1dded65a771acf453f0a4866973\lifecycle-runtime-2.3.1\proguard.txt
-keepattributes *Annotation*

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\7a90a1dded65a771acf453f0a4866973\lifecycle-runtime-2.3.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\09dfd543c5083a55a543a07b910e9d5f\lifecycle-viewmodel-2.3.1\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\09dfd543c5083a55a543a07b910e9d5f\lifecycle-viewmodel-2.3.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\c0ffd22c92d538124695a21a53574ee8\versionedparcelable-1.1.1\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\c0ffd22c92d538124695a21a53574ee8\versionedparcelable-1.1.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\98c9b54c0098e4a9d2e7e9c9c33ebaf2\room-runtime-2.3.0\proguard.txt
-keep class * extends androidx.room.RoomDatabase
-dontwarn androidx.room.paging.**

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\98c9b54c0098e4a9d2e7e9c9c33ebaf2\room-runtime-2.3.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\e9e42fd3e532c364436e550529b67a3a\rules\lib\META-INF\proguard\androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\e9e42fd3e532c364436e550529b67a3a\rules\lib\META-INF\proguard\androidx-annotations.pro
# The proguard configuration file for the following section is C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\ccb3197cf2f5ff3914a5f49b0dc95f15\annotation-experimental-1.1.0\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Ignore missing Kotlin meta-annotations so that this library can be used
# without adding a compileOnly dependency on the Kotlin standard library.
-dontwarn kotlin.Deprecated
-dontwarn kotlin.Metadata
-dontwarn kotlin.ReplaceWith
-dontwarn kotlin.annotation.AnnotationRetention
-dontwarn kotlin.annotation.AnnotationTarget
-dontwarn kotlin.annotation.Retention
-dontwarn kotlin.annotation.Target

# End of content from C:\Users\rama_\.gradle\caches\transforms-2\files-2.1\ccb3197cf2f5ff3914a5f49b0dc95f15\annotation-experimental-1.1.0\proguard.txt
# The proguard configuration file for the following section is <unknown>
-ignorewarnings
# End of content from <unknown>